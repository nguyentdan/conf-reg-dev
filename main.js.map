{"version":3,"sources":["./projects/conf-reg/src/app/comp/item/add.ts","./projects/conf-reg/src/app/comp/recycle-bin.ts","./projects/conf-reg/src/app/comp/list.ts","./projects/conf-reg/src/app/comp/dashboard/dashboard.component.html","./projects/conf-reg/src/app/comp/dashboard/dashboard.component.ts","./projects/conf-reg/src/app/context.service.ts","./projects/conf-reg/src/app/comp/logger/logger.component.html","./projects/conf-reg/src/app/comp/logger/logger.component.ts","./projects/conf-reg/src/app/app-routing.module.ts","./projects/conf-reg/src/app/comp/approver/approver.component.ts","./projects/conf-reg/src/app/comp/approver/approver.component.html","./projects/conf-reg/src/app/app.module.ts","./projects/sp/src/lib/common.ts","./projects/sp/src/lib/sp-utils.ts","./projects/sp/src/lib/sp-app-init.service.ts","./projects/sp/src/lib/base.service.ts","./projects/sp/src/lib/list.service.ts","./projects/sp/src/lib/list-item.service.ts","./projects/sp/src/lib/list-field.service.ts","./projects/sp/src/lib/sp-file.service.ts","./projects/sp/src/lib/material/material.module.ts","./projects/sp/src/lib/comp/announcement/announcement.component.html","./projects/sp/src/lib/comp/announcement/announcement.component.ts","./projects/sp/src/lib/comp/file-input/file-input.component.html","./projects/sp/src/lib/comp/file-input/file-input.component.ts","./projects/sp/src/lib/comp/list/list.component.html","./projects/sp/src/lib/comp/list/list.component.ts","./projects/sp/src/lib/comp/rx-form/rx-form.component.html","./projects/sp/src/lib/comp/rx-form/rx-form.component.ts","./projects/sp/src/lib/comp/field/field.component.html","./projects/sp/src/lib/comp/field/field.component.ts","./projects/sp/src/lib/comp/object-form/object-form.component.html","./projects/sp/src/lib/comp/object-form/object-form.component.ts","./projects/sp/src/lib/comp/list-fields/list-fields.component.html","./projects/sp/src/lib/comp/list-fields/list-fields.component.ts","./projects/sp/src/lib/comp/recycle-bin/recycle-bin.component.ts","./projects/sp/src/lib/comp/dialogs/dialogs.component.ts","./projects/sp/src/lib/sp.module.ts","./projects/sp/src/public-api.ts","./projects/conf-reg/src/app/comp/list-view.ts","./projects/conf-reg/src/app/comp/item/edit.ts","./projects/conf-reg/src/app/comp/email/email.component.ts","./projects/conf-reg/src/app/comp/email/email.component.html","./projects/conf-reg/src/app/comp/approval-steps/approval-steps.component.ts","./projects/conf-reg/src/app/comp/approval-steps/approval-steps.component.html","./projects/conf-reg/src/app/comp/approval-route/approval-route.component.html","./projects/conf-reg/src/app/comp/approval-route/approval-route.component.ts","./projects/conf-reg/src/app/comp/item/item.ts","./projects/conf-reg/src/app/comp/item/item.html","./projects/conf-reg/src/app/app.component.ts","./projects/conf-reg/src/app/app.component.html","./projects/conf-reg/src/environments/environment.ts","./projects/conf-reg/src/app/comp/approval-action/approval-action.component.html","./projects/conf-reg/src/app/comp/approval-action/approval-action.component.ts","./projects/conf-reg/src/main.ts","./projects/conf-reg/src/app/comp/members/members.component.ts","./projects/conf-reg/src/app/comp/members/members.component.html","./$_lazy_route_resource lazy namespace object"],"names":["i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵlistener","i0.ɵɵelement","i0.ɵɵproperty","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","i0.ɵɵpropertyInterpolate","i0.ɵɵclassMap"],"mappings":"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","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\nimport { ContextService } from './../../context.service';\nimport { Operator } from './item'\n\n@Component({\n  selector: 'add-item',\n  template: '<list-item *ngIf=\"item\" [item]=\"item\" [operations]=\"operations\"></list-item>'\n})\nexport class AddComponent {\n  user:any;\n  item:any;\n  operations:any = {};\n\n  constructor(private ctx:ContextService) {\n    this.ctx.docTitle('New Request');\n    this.item = {\n      value: {},\n      fields: this.ctx.metadata.fields\n    };\n\n    this.operations[Operator.Add] = { caption: 'Submit', disabled: true, color: 'primary' };\n  }\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport { ContextService } from '../context.service';\n\n@Component({\n  selector: 'app-recycle-bin',\n  template: `\n    <lib-recycle-bin [url]=\"url\"></lib-recycle-bin>\n    <div class=\"info\">Click on the \"Title\" of the item to restore it.</div>`\n})\nexport class RecycleBinComponent {\n  url:string;\n  \n  constructor(private ctx:ContextService) {\n    this.url = ctx.config.url.web;\n    ctx.current.page$.next('Recycle Bin');\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ContextService } from '../context.service';\n\n@Component({\n  selector: 'app-list',\n  template: `\n    <div class=\"row center\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Filter by stage</mat-label>\n        <mat-select [(value)]=\"stage\" (selectionChange)=\"ngOnInit()\">\n          <mat-option value=\"\">None/Clear</mat-option>\n          <mat-option value=\"In progress\">In progress</mat-option>\n          <mat-option *ngFor=\"let opt of stages\" [value]=\"opt\">{{opt}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n      <span class=\"spacer\"></span>\n      <span class=\"font-16\">Count: {{list?.items?.length}}</span>\n    </div>\n    <app-list-view *ngIf=\"list\" [list]=\"list\"></app-list-view>`\n})\nexport class ListComponent implements OnInit {\n  list:any;\n  stage:string = 'In progress'; /// load items 'In progress' by default\n  stages:string[];\n\n  constructor(private sp:ContextService) {\n    this.stages = Object.values(sp.config.Map.Stage);\n  }\n  \n  ngOnInit(): void {\n    /// copy 'query' if any\n    let qry:any = JSON.parse(JSON.stringify(this.sp.metadata?.query)) || {};\n    if (this.stage) {\n      qry.filter = (this.stage === 'In progress')\n        ? `Stage ne '${this.sp.ENUM.Stage.End}'`\n        : `Stage eq '${this.stage}'`;\n    }\n    else {\n      qry.filter = '';\n    }\n\n\n    this.sp.data.query(qry).subscribe((items:any[]) => {\n      /// generate { items<any[], fields:<any[]>, displays:<string[]>, cssKey:<string }\n      this.list = {\n        items: items,\n        fields: this.sp.metadata.fields,\n        displays: this.sp.metadata.displays\n          || this.sp.metadata.fields.map((field:any) => field.EntityPropertyName).slice(0, 5),\n        cssKey: 'Stage'\n      };\n    });\n\n    this.sp.docTitle('List View');\n  }\n}\n","<div *ngIf=\"list?.items\">\n   <div style=\"margin-top:32px\">\n      <mat-card class=\"summary-card\">\n         <mat-card-header class=\"flex\">\n            <mat-card-title>&#8721;</mat-card-title>\n            <mat-form-field style=\"width:20%\">\n               <mat-label>Group by</mat-label>\n               <mat-select [value]=\"this.keys.selected\"\n                  (selectionChange)=\"rollup($event.value)\">\n                  <mat-option *ngFor=\"let key of keys.toGroup\" [value]=\"key\">{{display[key] || key}}</mat-option>\n               </mat-select>\n            </mat-form-field>\n            <span>Count: {{list.calc.count}}</span>\n            <span *ngFor=\"let sum of list.calc.sum | keyvalue\">\n               {{sum.key + \": \" + (sum.value | number:'1.2')}}\n            </span>                     \n         </mat-card-header>\n\n         <mat-card-content>\n            <lib-list\n               [list]=\"list\" \n               (selectEvent)=\"selectGroup($event)\">\n            </lib-list>\n         </mat-card-content>\n      </mat-card>\n   </div>\n</div>\n\n<div *ngIf=\"sublist\">\n   <div class=\"row\" style=\"align-items:center;\">\n      <h3>{{sublist.name}}</h3>\n      <span class=\"spacer\"></span>\n      <button mat-button (click)=\"ngOnInit()\">🔃 Reload Data</button>\n   </div>\n\n   <app-list-view [list]=\"sublist\"></app-list-view>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ContextService } from '../../context.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  items:any[];  /// to be grouped\n  list:any;     /// list of groups (grouped by selected key)\n  sublist:any;  /// selected group\n\n  keys:any;\n  display:any;\n\n  constructor(private svc:ContextService) {}\n\n  /// out: { key-1: total-1, ..., key-N: total-N }\n  private _sum(list:any[], keys:string[]) {\n    let total:any = {};\n    keys.forEach(k => total[k] = 0);\n\n    if (list?.length && keys?.length) {\n      list.forEach(item => {\n        keys.forEach(k => total[k] += (item[k] || 0))\n      });\n\n      return total;\n    }\n\n    return;\n  }\n\n  /// generate meta-list\n  /// ==> list: { fields<any[], dispalys<string[] }\n  private _generateMetalist(key=this.keys.selected, sumKeys:string[]=this.keys.toSum) {\n    let list:any = {};\n\n    /// list.fields: [ group_field, count_field, sum_fields]\n    let groupField = this.svc.metadata.fields.find((field:any) => field.EntityPropertyName === key);\n    if (!groupField) {\n      groupField = {\n        EntityPropertyName: key, Title: key, FieldTypeKind: 2\n      };\n    }\n    let countField = { EntityPropertyName: 'Count', Title: 'Count', FieldTypeKind: 1 };\n    list.fields = [groupField, countField].concat(\n      sumKeys.map(key => this.svc.metadata.fields.find((field:any) => field.EntityPropertyName === key))\n    );\n\n    /// list.displays\n    list.displays = list.fields.map((field:any) => field?.EntityPropertyName);\n\n    return list;\n  }\n\n  /// rollup by 'groupKey'\n  /// ==> groups with count, and sum for each key in 'sumKeys'\n  private _rollup(items:any[], groupKey:string, sumKeys:string[]) {\n    if (items?.length && groupKey && sumKeys?.length) {\n      let groups:any = [], idx:number = -1;\n\n      let val:any;\n      items.forEach(item => {\n        try { val = eval(`item.${groupKey}`); }\n        catch(err) { val = 'UNDEFINED'; }\n        // val = eval(`item?.${groupKey}`) || 'UNDEFINED';\n        \n        idx = groups.findIndex((g:any) => g[groupKey] === val);\n        if (idx < 0) {\n          /// group is not existed yet\n          /// create new group add item and initialize it\n          let group:any = {};\n          group[groupKey] = val;\n          group.items = [item]; \n          group.Count = 1;\n          sumKeys.forEach(k => group[k] = (item[k] || 0));\n          groups.push(group);\n        }\n        else {\n          /// add item to group, increase count, calc sums\n          groups[idx].items.push(item);\n          groups[idx].Count++;\n          sumKeys.forEach(k => groups[idx][k] += (item[k] || 0));\n        }\n      });\n      return groups;\n    }\n    return undefined;\n  }\n\n  ngOnInit(): void {\n    this.svc.data.get().subscribe((items:any[]) => {\n      this.items = items;\n      this.keys = this.svc.config.data.dashboard.keys;\n\n      /// used to map 'PropertyEntityName' to title/display\n      this.display = this.svc.config.Map.toString;\n\n      /// group items by selected key\n      this.rollup(this.keys.selected || this.keys.toGroup[0]);\n\n      /// set document.title\n      this.svc.current.page$.next('Dashboard');\n    });\n  }\n\n  ///\n  rollup(key:string, sumKeys=this.keys.toSum, items=this.items):any {\n    this.svc.current.busy$.next(true);\n\n    this.sublist = null;  /// reset\n    \n    if (items?.length && key) {\n      this.keys.selected = key;\n\n      this.list = this._generateMetalist(key, sumKeys);\n      this.list.items = this._rollup(this.items, key, sumKeys);\n      \n      if (!this.list.calc) {\n        this.list.calc = {\n          sum: this._sum(this.list.items, this.keys.toSum),\n          count: this.items.length\n        }\n      }\n    }\n    this.svc.current.busy$.next(false);\n  }\n\n  ///\n  selectGroup(group:any) {\n    this.sublist = {\n      items: group.payload.items,\n      fields: this.svc.metadata.fields,\n      displays: this.svc.metadata.displays\n        || this.svc.metadata.fields\n            .slice(0,5)\n            .map((field:any) => field.EntityPropertyName),\n      cssKey: 'Stage',\n      name: group.payload[this.keys.selected]\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { JsonPipe } from '@angular/common';\nimport { SpAppInitService, BaseService, Busy$, Odata, ListItemService, \n  Error$, GeneralDialog, findObjectKeyByValue } from 'sp';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Subject, of } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class ContextService {\n  current = {\n    item$: new Subject<any>(),\n    busy$: Busy$,\n    page$: new Subject<string>(),\n    error$: Error$\n  }\n\n  logger:any;\n  dialogRef:any;\n\n  constructor(\n    private Init:SpAppInitService,\n    private Svc:BaseService,\n    private lis:ListItemService,\n    public jsonPipe:JsonPipe,\n    public snackBar:MatSnackBar,\n    public dialog: MatDialog,\n  ) {\n    this.current.item$.subscribe({ next: (val) => val });\n    this.current.page$.subscribe(title => this.docTitle(title));\n    Error$.subscribe((err:string) => this.error(err));\n    \n    this.initLogger();    \n  }\n\n  get user():any { return this.Init.user; }\n  get config() { return this.Init.config ; }\n  get metadata() {\n    if (this.config?.data?.stores) {\n      let index = this.config.data.default || 0;\n      return this.config.data.stores[index];\n    }\n    return undefined;\n  }\n\n  get ENUM() { return this.config.Map; }\n  get devMode() { return this.Init.setting.mode.toLowerCase() === 'dev'; }\n  get testing()  { return this.devMode || this.config.troubleshooting };\n\n  docTitle(title:string) {\n    document.title = title ? `${this.config.name}/${title}` : this.config.name;\n  }\n\n  ///\n  metalist(name:string) {\n    /// list info { title<string>, url<string>, query<any> }\n    return this.config.lists[name];\n  }\n\n  listItems(name:string) {\n    /// SpListService.items\n    let metalist = this.metalist(name);\n    if (metalist) {\n      this.lis.set(metalist);\n      return this.lis;\n    }\n    return;\n  }\n\n  get data() {\n    try {\n      this.lis.set(this.metadata);\n      return this.lis;\n    }\n    catch(err) {\n      Error$.next({\n        'Data List': 'Data configuration error', \n        Detail: err\n      });\n      return;\n    }\n  }\n\n  get workflow() { return this.listItems('Workflow'); }\n\n  get log() { return this.listItems('AppLogs'); }\n\n  wfMessages(key?:string, value?:string) {\n    let qry:any = {};\n    if (key && value) {\n      if (this.metalist('Workflow')?.query) {\n        Object.assign(qry, this.metalist('Workflow').query);\n        qry.filter = qry.filter \n          ? `${qry.filter} and ${key} eq '${value}'`\n          : `${key} eq '${value}'`;\n      }\n    }\n\n    return this.workflow.query(qry);\n  }\n\n  getApprovers(column:string, val:any) {\n    /// find 'Department' field choices, then find dept from choices\n    let field = this.metadata.fields\n      .find((f:any) => f.EntityPropertyName === column);\n    let approval = field.Choices\n      .find((c:any) => c[field.LookupList.value] === val);\n    \n    let approvers = [];\n    Object.keys(this.ENUM.ApprovalTitle).forEach(key => {\n      let members = (key === 'CS')  /// 'CS': Cert Submission\n        ? val.Author\n          ? [val.Author]\n          : [{ \n              Title: this.user.Title,\n              Name: this.user.LoginName,\n              Email: this.findEmail(this.user)\n            }]\n        : approval[key];\n      if (members) approvers.push({\n        title: this.ENUM.ApprovalTitle[key],\n        members: members\n      });\n    });\n    return approvers;\n  }\n\n  notify(msg1:string, msg2='OK', duration = 1000) {\n    this.snackBar.open(msg1, msg2, {\n      duration: duration,\n      horizontalPosition: 'center',\n      verticalPosition: 'top'\n    });\n  }\n\n  /// expect approval: { key<string>, title<string>, chain:<any[]>, departmentId:<number> }\n  getApprovalMembers(request:any, stage?:string) {\n    if (!stage) stage = request.Stage;\n\n    // current user\n    if (stage === 'Confirmation') {\n      return [this.user];\n    }\n\n    // author\n    if (stage === this.ENUM.Stage.Start \n      || stage === this.ENUM.Stage.CS\n      || stage === this.ENUM.Stage.End) {\n      return [request.Author];\n    }\n\n    // find approval members at 'stage'\n    if (request.Approvers) {\n      let approvalChain = JSON.parse(request.Approvers);\n\n      /// get approval route (from available routes)\n      /// return members of that route \n      if (approvalChain) {\n        let approval = approvalChain.find((stage:any) => stage.title === stage);\n        if (approval?.members?.length) return approval.members;\n      }\n    }\n    \n    /// get department (from department choices), \n    /// then return department[staff.key] ==> staff members\n    if (!request.DepartmentId) {\n      this.alert(\n        `Failed to get approval (${stage}) members in Department ID ${request.DepartmentId}.`,\n        'Error caught in \"GetMembersByDepartmentId()\"',\n        'error');\n      return;\n    }\n\n    let deptField = this.metadata.fields\n      .find((field:any) => field.EntityPropertyName === 'DepartmentId');\n\n    if (!deptField?.Choices?.length) {\n      this.alert(\n        'Failed to find the \"DepartmentId\" field[Choices] in configuration.',\n        'Error caught in \"GetMembersByDepartmentId()\"',\n        'error');\n      return;\n    }\n\n    let dept = deptField.Choices\n      .find((choice:any) => choice.ID === request.DepartmentId);\n\n    if (!dept) {\n      this.alert(\n        deptField.Choices,\n        `Failed to find the Department ID ${request.DepartmentId} field.`,\n        'error');\n      return;\n    }\n\n    let approvalKey = findObjectKeyByValue(this.ENUM.ApprovalTitle, stage);\n    return dept[approvalKey];\n  }\n\n  email(message:any) {\n    try {\n      let data:any = {\n        properties: {\n          __metadata: { type: 'SP.Utilities.EmailProperties' },  // for 'verbose'\n          To: { results: message.To },\n          From: this.findEmail(this.user),\n          Subject: message.Subject,\n          Body: message.Body\n        }\n      };\n\n      /// email URI - REST API endpoint\n      let uri = `${this.config.url.web}/_api/SP.Utilities.Utility.SendEmail`;\n\n      /// add 'CC' property if message.CC has email addresses\n      if (message.CC)\n        data.properties.CC = { results: message.CC };\n\n      if (this.config.troubleshooting) console.log('Email:', data);\n\n      return (!this.devMode)\n        ? this.Svc.post(uri, JSON.stringify(data), 'add', Odata.Verbose)\n        : of(data);\n    }\n    catch(err) {\n      const error = {\n        Email: 'Invalid Email Message - email aborted.',\n        Detail: err\n      }\n      Error$.next(error);\n      // return of(error);\n    }\n  }\n\n  emailTo(request:any, stage?:string) {\n    if (!stage) stage = request.Stage;\n    \n    return this.wfMessages('Stage', stage)\n    .pipe(\n      mergeMap((msgs:any[]) => {\n        if (msgs[0]) {\n          // staff members\n          let members = this.getApprovalMembers(request, stage);\n\n          if (!members?.length) {\n            Error$.next('Could not find approval staff members. Email has been aborted.')\n            return Error$;\n          }\n\n          let url = `${this.ENUM.Url.detail}${request.ID}`;\n          msgs[0].To = this.mapToEmailAddresses(members);\n          msgs[0].Body = `${msgs[0].Body}<br>${url}<br>${msgs[0].Footer}`;\n\n          if (msgs[0].CC) {\n            /// convert <string> to <array>\n            try { msgs[0].CC = this.stringToArray(msgs[0].CC); }\n            catch(err) { this.alert(err, 'Failed to convert string to array'); }\n          }\n\n          return this.email(msgs[0]);\n        }\n        else {\n          let error = {\n            'ContextService.emailTo': `Route info at ${stage} was not found.`,\n            Detail: msgs\n          };\n          Error$.next(error);\n          return of(error);\n        }\n      })\n    );\n  }\n\n  findEmail(user:any) {\n    return user?.Email || user?.EMail || user?.LoginName || user?.Name;\n  }\n\n  mapToEmailAddresses(users: any[]): string[] {\n    if (users?.length) {\n      return users.map(user => user?.Email || user?.EMail || user?.LoginName || user?.Name);\n    }\n    return;\n  }\n\n  getGroupUsers(groupId:number) {\n    return this.Svc.get(`${this.config.url.web}/_api/web/SiteGroups(${groupId})/Users`);\n  }\n\n  queryUsers(groupId:number, key?:string, value='') {\n    let expr = (key && value)\n      ? `?$filter=substringof('${value}',${key}) or substringof('${value}',Title)`\n      : (value) ? `?$substringof('${value}',Title)` : '';\n\n    return this.Svc.get(`${this.config.url.web}/_api/web/SiteGroups(${groupId})/Users${expr}`);\n  }\n\n  ///\n  reportError(err:string) {\n    Error$.next(err);\n  }\n\n  cssClass = (s:string) => {\n    switch(s) {\n      case this.ENUM.Stage.Start:\n        return 'pending';\n      case this.ENUM.Stage.End:\n        return 'completed';\n      default:\n        return 'in-progress';\n    }\n  }\n\n  alert(err:any, title?:string, cat='error') {\n    if (cat === 'error' || cat === 'warn')\n      console[cat](`${cat}:\\n`, err);\n\n    this.dialog\n      .open(GeneralDialog, {\n        data: {\n          Title: title,\n          Cat: cat,\n          Detail: err,\n          Type: typeof(err),\n          // Operations: [\n          //   { name: 'Got it', focused: true }\n          // ]\n        },\n        disableClose: true\n      })\n      .afterClosed()\n      .subscribe();\n  }\n\n  confirm(err:any, title?:string, cat='warn') {\n    if (cat === 'error' || cat === 'warn')\n      console[cat](`${cat}:\\n`, err);\n\n    return this.dialog\n      .open(GeneralDialog, {\n        data: {\n          Title: title,\n          Cat: cat,\n          Detail: err,\n          Type: typeof(err),\n          Operations: [\n            { name: 'Yes', value: true, class: cat + '-bg', focused: true },\n            { name: 'No', value: false },\n          ]\n        },\n        disableClose: true\n      })\n      .afterClosed();\n  }\n\n  logHeader(message:string, title?:string) {\n    const _title = title ? `(${title})` : '';\n    return `${this.user.Title} ${_title}, ${new Date().toLocaleString()}:\\n${message || 'Updated.'}`;\n  }\n\n  error(err:any, requestId?:number, msg?:string) {\n    if (this.logger) {\n      let logItem = {\n        Title: this.config.name,\n        RequestId: requestId || err?.RequestId,\n        Cat: 'Error',\n        Action: this.logHeader(this.jsonPipe.transform(err))\n      };\n  \n      this.logger.write(logItem);\n      this.alert(err, err.message || logItem.Title);\n    }\n\n    else {\n      alert('Error\\n' + msg + JSON.stringify(err));\n      console.error('Error\\n', msg, err);\n    }\n  }\n\n  /// ---\n  private initLogger() {\n    if (this.metalist('AppLogs'))\n      this.logger = new Logger(this.config.name, this.lis, this.metalist('AppLogs'));\n  }\n\n  private stringToArray(s:string, separator?:string): string[] {\n    if (s) {\n      let ar:string[];\n      if (separator) ar = s.split(separator);\n      else if(s.includes(',')) ar = s.split(',');\n      else if(s.includes(';')) ar = s.split(';');\n      else ar = [s];\n\n      return ar.map(s => s.trim());\n    }\n    return;\n  }\n}\n\nclass Logger {\n  app:string;\n  operator:any;\n  metalist:any;\n\n  constructor(app:string, lis:any, metalist:any) {\n    this.app = app;\n    this.operator = lis;\n    this.metalist = metalist;\n  }\n\n  get op() {\n    this.operator.set(this.metalist);\n    return this.operator;\n  }\n\n  async read(requestId?:number, cat?:'info'|'warn'|'error'|null) {\n    let qry = { filter: `Title eq '${this.app}'` };\n    if (!isNaN(requestId)) {\n      qry.filter += ` and RequestId eq ${requestId}`\n        + (!!cat ? ` and Cat eq '${cat}'`: '');\n    }\n    return this.op.queryAsync(qry);\n  }\n\n  async write(data:any, field='Action') {\n    if (!isNaN(data.RequestId)) {\n      return this.read(data.RequestId, data.Cat)\n      .then((res:any) => {\n        if (res?.length > 0) {\n          data.ID = res[0].ID;\n          data[field] = `${res[0][field]}\\n\\n${data[field]}`;\n          return this.op.updateAsync(data);\n        }\n        return this.op.addAsync(data);\n      });\n    }          \n    return this.op.addAsync(data);\n  }\n\n  async append(action:string, requestId?:number, cat='info', title=this.app) {\n    return this.write({\n      Title: title,\n      Action: action,\n      RequestId: requestId,\n      Cat: cat\n    });\n  }  \n}","\n<div *ngIf=\"log?.items\">\n   <h2>logs {{log.items.length}}</h2>\n   <lib-list [list]=\"log\" (selectEvent)=\"detail($event)\"></lib-list>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ContextService } from '../../context.service';\n\n@Component({\n  selector: 'app-logger',\n  templateUrl: './logger.component.html'\n})\nexport class LoggerComponent implements OnInit {\n  log:any = {};\n  \n  constructor(private ctx: ContextService) {}\n\n  ngOnInit(): void {\n    // this.read().then((resp:any[]) => {\n    this.ctx.logger.read().then((resp:any[]) => {\n      this.log.items = resp;\n      this.log.fields = [\n        // { Title: 'App', EntityPropertyName: 'Title', FieldTypeKind: 2,  Required: true, CssClass: 'col-4' },\n        { Title: 'Request ID', EntityPropertyName: 'RequestId', FieldTypeKind: 1, Required: true, CssClass: 'col-1' },\n        { Title: 'Cat', EntityPropertyName: 'Cat', FieldTypeKind: 6, Required: true, CssClass: 'col-1' },\n        { Title: 'Action', EntityPropertyName: 'Action', FieldTypeKind: 3, Required: true, CssClass: 'col-6' },\n        { Title: 'Modified', EntityPropertyName: 'Modified', FieldTypeKind: 4, Required: true, CssClass: 'col-3' }\n      ];\n      this.log.displays = ['RequestId', 'Cat', 'Action', 'Modified'];\n\n      this.ctx.current.page$.next('App Log');\n    });\n  }\n\n  // read()  {\n  //   return this.ctx.logger.read();\n  // }\n\n  detail(ev:any) {\n    this.ctx.alert(\n      ev.payload.Action,\n      `${ev.payload.Title} Request ${ev.payload.RequestId}`,\n      ev.payload.Cat ? ev.payload.Cat.toLowerCase() : 'info'\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { AddComponent } from './comp/item/add';\nimport { EditComponent } from './comp/item/edit';\nimport { ListComponent } from './comp/list';\nimport { DashboardComponent } from './comp/dashboard/dashboard.component';\nimport { EmailComponent } from './comp/email/email.component';\nimport { LoggerComponent } from './comp/logger/logger.component';\nimport { RecycleBinComponent } from './comp/recycle-bin';\n\nexport const routes:any = [\n  { name: 'New Request', path: 'new', component: AddComponent },\n  { name: 'View Requests', path: 'list', component: ListComponent },\n  { name: '', path: 'list/:id', component: EditComponent },\n  { name: 'Summary', path: 'dashboard', component: DashboardComponent },\n  { name: 'Email', path: 'email', component: EmailComponent },\n  { name: 'Log', path: 'log', component: LoggerComponent },\n  { name: 'Recycle Bin', path: 'recycle', component: RecycleBinComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnChanges, ViewChild, Input, Output, EventEmitter } from '@angular/core';\nimport { ContextService } from '../../context.service';\n\n@Component({\n  selector: 'app-approver',\n  templateUrl: './approver.component.html'\n})\nexport class ApproverComponent implements OnChanges {\n  @Input() staff:any;\n  @Input() operator:string;\n  @Output() execute = new EventEmitter();\n\n  editing = false;\n\n  enum:any;\n  roles:any;\n  metafield = {\n    key: 'Title', //this.sp.devMode ? 'LoginName' : 'Email',\n    label: 'Staff members',\n    placeholder: 'Type name(s), then select from dropdown',\n    appearance: 'outline',\n    floatLabel: 'always',\n    editing: true\n  };\n\n  finishedSearch:boolean;\n  private copy:string;\n\n  constructor(private ctx:ContextService) {\n    this.enum = this.ctx.ENUM;\n    this.roles = this.ctx.config.roles;\n  }\n\n  ngOnChanges(): void {\n    if (this.operator) {\n      if (this.operator.toLowerCase() === 'edit') {\n        this.copy = JSON.stringify(this.staff);\n      }\n\n      this.setEditing(true);\n    }\n  }\n\n  onEdit() {\n    this.copy = JSON.stringify(this.staff);\n    this.operator = 'edit';\n    this.setEditing(true);\n  }\n\n  save(operator = this.operator) {\n    this.emitAction(operator, true, this.staff);\n    this.setEditing(false);\n  }\n\n  remove() {\n    this.emitAction('delete', true, this.staff);\n  }\n\n  cancel() {\n    /// edit: restore to the original\n    if (this.operator.toLowerCase() === 'edit')\n      this.staff = JSON.parse(this.copy);\n\n    this.emitAction(this.operator, false, this.staff);\n    this.setEditing(false);\n  }\n\n  ///--- private ---\n  // private reset() {\n  //   this.finishedSearch = true;\n  //   this.editing = false;\n  //   this.editingChange.emit(this.editing);\n  // }\n\n  private setEditing(editing:boolean) {\n    this.finishedSearch = !editing;\n    this.editing = editing;\n  }\n\n  private emitAction(op:string, committed:boolean, data:any) {\n    this.execute.emit({\n      operator: op,\n      committed: committed,\n      data: data\n    });\n  }\n}\n","\n\n<div *ngIf=\"!editing\" class=\"row\">\n   <div class=\"col-3\">\n      <a [matMenuTriggerFor]=\"menu\" title=\"More actions\">\n         {{staff.title}} ...\n      </a>\n\n      <mat-menu #menu=\"matMenu\">\n         <button mat-menu-item (click)=\"onEdit()\" [disabled]=\"staff.title==enum.Stage.CS\">\n            <mat-icon>edit</mat-icon>\n            <span>Edit</span>\n         </button>\n\n         <button mat-menu-item (click)=\"remove()\">\n            <mat-icon>delete</mat-icon>\n            <span>Remove this staff</span>\n         </button>\n      </mat-menu>\n   </div>\n\n   <div class=\"col-9\">\n      Members:\n      <mat-chip-list>\n         <mat-chip *ngFor=\"let member of staff.members\" style=\"margin-left:8px;\">\n            {{member.Title}}\n         </mat-chip>\n      </mat-chip-list>\n   </div>\n</div>\n\n<div *ngIf=\"editing\" class=\"inline-edit\">\n   <div class=\"row\">\n      <div class=\"col-3\">\n         <mat-form-field appearance=\"outline\">\n            <mat-label>Staff Title</mat-label>\n            <mat-select [(ngModel)]=\"staff.title\">\n               <mat-option *ngFor=\"let title of enum.ApprovalTitle | keyvalue\"\n                  [value]=\"title.value\">{{title.value}}\n               </mat-option>\n            </mat-select>\n         </mat-form-field>\n      </div>\n\n      <div class=\"col-9\">\n         <app-members [groupId]=\"roles[staff.title]\"\n            [field]=\"metafield\"\n            [(items)]=\"staff.members\"\n            [done]=\"finishedSearch\">\n         </app-members>\n      </div>\n   </div>\n\n   <mat-atcion-row style=\"display: flex;\">\n      <span class=\"spacer\"></span>\n      <button mat-button (click)=\"save()\" color=\"primary\">Save</button>\n      <button mat-button (click)=\"cancel()\">Cancel</button>\n   </mat-atcion-row>\n</div>","import { NgModule, APP_INITIALIZER, ErrorHandler } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\n\n/// cust module\nimport { SpModule, SpAppInitService, appInit } from 'sp';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppComponent } from './app.component';\nimport { ItemComponent } from './comp/item/item';\nimport { AddComponent } from './comp/item/add';\nimport { EditComponent, EditDialog } from './comp/item/edit';\nimport { ListViewComponent } from './comp/list-view';\nimport { ListComponent } from './comp/list';\nimport { MembersComponent } from './comp/members/members.component';\n// import { ProcessComponent } from './comp/process/process.component';\n// import { ApprovalChainComponent } from './comp/approval-chain/approval-chain.component';\nimport { ApprovalStepsComponent } from './comp/approval-steps/approval-steps.component';\nimport { ApproverComponent } from './comp/approver/approver.component';\nimport { ApprovalActionComponent } from './comp/approval-action/approval-action.component';\nimport { ApprovalRouteComponent } from './comp/approval-route/approval-route.component';\nimport { RecycleBinComponent } from './comp/recycle-bin';\nimport { LoggerComponent } from './comp/logger/logger.component';\nimport { EmailComponent } from './comp/email/email.component';\nimport { DashboardComponent } from './comp/dashboard/dashboard.component';\n\nexport class AppErrorHandler implements ErrorHandler {\n  constructor() { }\n  handleError(error: Error) {\n    if (Error) alert(error);\n  }\n}\n\nErrorHandler\n@NgModule({\n  declarations: [\n    AppComponent,\n    ItemComponent, AddComponent, EditComponent, EditDialog,\n    ListComponent,\n    ListViewComponent,\n    MembersComponent,\n    // ProcessComponent,\n    // ApprovalChainComponent,\n    RecycleBinComponent,\n    LoggerComponent,\n    ApprovalStepsComponent,\n    ApproverComponent,\n    ApprovalActionComponent,\n    ApprovalRouteComponent,\n    EmailComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule, ReactiveFormsModule,\n    SpModule\n  ],\n  providers: [\n    { provide: APP_INITIALIZER, useFactory: appInit, deps: [SpAppInitService], multi: true },\n    { provide: AppErrorHandler, useClass: AppErrorHandler, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\r\nimport { Subject, Observable } from 'rxjs';\r\n\r\n/**\r\n * @param file, return-type\r\n * @returns array buffer, binary string, data url, or text (default)\r\n */\r\nexport function fileRead(file:File, as?:'array-buffer' | 'binary-string' | 'data-url') {\r\n   let reader = new FileReader();\r\n\r\n   switch(as) {\r\n      case 'array-buffer':\r\n         reader.readAsArrayBuffer(file);\r\n         break;\r\n      case 'binary-string':\r\n         reader.readAsBinaryString(file);\r\n         break;\r\n      case 'data-url':\r\n         reader.readAsDataURL(file);\r\n         break;\r\n      default:\r\n         reader.readAsText(file);\r\n   }\r\n\r\n   return new Observable<any>((subscriber) => {\r\n      reader.onload = evt => {\r\n         subscriber.next(evt.target.result);\r\n         subscriber.complete();\r\n      }\r\n      reader.onerror = evt => subscriber.error(evt.target.error);\r\n   });\r\n}\r\n\r\n/**\r\n * @param array1:any[]\r\n * @param key1:string\r\n * @param array2:any[]\r\n * @param key2:string\r\n * @returns number[], indeces of duplicated items in array1\r\n */\r\nexport function findDuplicates(a1:any[], k1:string, a2:any[], k2?:string) {\r\n   if (a1?.length > 0 && a2?.length > 0 && k1?.length > 0) {\r\n      if (!k2) k2 = k1;\r\n      let duplicates = [];\r\n\r\n      for (let i = 0; i < a1.length; i++) {\r\n         if (a2.find(item => item[k2].localeCompare(a1[i][k1]) === 0))\r\n            duplicates.push(i);\r\n      }\r\n      return duplicates;\r\n   }\r\n   return;\r\n}\r\n\r\nexport function removeByItemKey(a:any[], item:any, key:string) {\r\n   if (a?.length > 0 && item && key) {\r\n      let idx = a.findIndex(i => i[key] === item[key]);\r\n      if (idx > -1) a.splice(idx, 1);\r\n   }\r\n}\r\n\r\nexport function removeByKeyValue(a:any[], key:string, value:any) {\r\n   if (a?.length > 0 && key) {\r\n      let idx = a.findIndex(i => i[key] === value);\r\n      if (idx > -1) a.splice(idx, 1);\r\n   }\r\n}\r\n\r\nexport function replace(a:any[], item:any, key?:string) {\r\n   if (a?.length > 0 && item) {\r\n      let idx = (key?.length > 0)\r\n         ? a.findIndex(i => i[key] === item[key])\r\n         : a.indexOf(item);\r\n      \r\n      if (idx > -1) {\r\n         a[idx] = item;\r\n         return true;\r\n      }\r\n   }\r\n   return false;\r\n}\r\n\r\nexport function replaceOrAdd(a:any[], item:any, key?:string) {\r\n   if (!a) a = [];\r\n   if (!replace(a, item, key)) a.push(item);\r\n}\r\n\r\nexport function merge(a1:any[], a2:any[], key:string, datatype?:string, caseSensitive=false) {\r\n   if (a1?.length === 0) return a2;\r\n   \r\n   if (a1?.length > 0 && a2?.length > 0 && key?.length > 0) {\r\n      let distinct = [];\r\n      \r\n      a2.forEach(item => {\r\n         let found = (datatype.localeCompare('string') === 0 && !caseSensitive)\r\n            ? a1.find(i => i[key].localeCompare(item[key]) === 0)\r\n            : a1.find(i => i[key] === item[key]);\r\n         \r\n         if (!found) distinct.push(item);\r\n      });\r\n\r\n      return a1.concat(distinct);\r\n   }\r\n   return \r\n}\r\n\r\nexport function findDistinct(a:any[], key?:string) {\r\n   if (a?.length > 0) {\r\n      try {\r\n         let o = {}, existed:boolean, prop:string;\r\n         \r\n         a.forEach(item => {\r\n            prop = (key?.length) ? item[key] : item;\r\n            existed = (prop in o);\r\n\r\n            if (!existed) o[prop] = item;\r\n         });\r\n         \r\n         return Object.values(o);\r\n      }\r\n\r\n      catch(err) {\r\n         console.error('Error ocurred in \"findDistinct()\" function.');\r\n         throw(err);\r\n      }\r\n   }\r\n}\r\n\r\nexport function removeDuplicates(a:any[], key?:string) {\r\n   if (a?.length > 0) {\r\n      try {\r\n         let o = {}, prop:string, len = a.length;\r\n\r\n         for (let i = 0; i < len; i++) {\r\n            prop = (key?.length > 0) ? a[i][key] : a[i];\r\n            if (o[prop]) {\r\n               a.splice(i, 1);\r\n               len = a.length;\r\n               i--;\r\n            }\r\n\r\n            else o[prop] = true;\r\n         }\r\n      }\r\n\r\n      catch(err) {\r\n         console.error('Error ocurred in \"removeDuplicates()\" function.');\r\n         throw(err);\r\n      }\r\n   }\r\n}\r\n\r\nexport function findObjectKeyByValue(o:any, value:string|number):string {\r\n   for (let key in o) {\r\n      if (o[key] === value) {\r\n         console.log('found:', key, value);\r\n         return key;\r\n      }\r\n   }\r\n   return;\r\n}\r\n\r\n// export const Log = {\r\n//   limit: 10,\r\n\r\n//   keys: ['requests', 'responses', 'errors'],    /// default keys\r\n\r\n//   readAllKeys: () => Log.keys = Object.keys(localStorage),\r\n\r\n//   alert: (msg:string, err?:any) => {\r\n//     let detail = (typeof err === 'object')\r\n//       ? `Status: ${err.status} - ${err.statusText}\\nURL: ${err.url}\\nMessage: ${err.message}\\nError: ${err.error['odata.error']?.message?.value}`\r\n//       : err;\r\n//     alert(`${msg}\\n\\n${detail}`);;\r\n//     console.error(msg, '\\n', err);\r\n//   },\r\n\r\n//   read: (key:string) => {\r\n//     if (!!localStorage[key]) {\r\n//       try { return JSON.parse(localStorage[key]); }\r\n//       catch(err) {\r\n//         return localStorage[key];\r\n//       }\r\n//     }\r\n//     return;\r\n//   },\r\n\r\n//   write: (key:string, value:any) => {\r\n//     if (Log.keys.indexOf(key) < 0) Log.keys.push(key);\r\n//     let errors = Log.read(key) || [];\r\n//     errors.push(value);\r\n//     if (errors.length > Log.limit) errors.shift();\r\n//     localStorage[key] = JSON.stringify(errors);\r\n//   },\r\n\r\n//   error: (msg:string, err?:any) => {\r\n//     Log.write('errors', {\r\n//       date: new Date().toLocaleString(),\r\n//       message: msg,\r\n//       error: err\r\n//     });\r\n\r\n//     Log.alert(msg, err);\r\n//   },\r\n\r\n//   clear: (key:string) => localStorage.removeItem(key),\r\n  \r\n//   clearAll: () => localStorage.clear(),\r\n\r\n//   resize: (size:number) => {\r\n//     if (size > 0) {\r\n//       if (size < Log.limit) {\r\n//         /// resize the array length if any\r\n//         for (let key in Log.keys) {\r\n//           let ar = Log.read(key);\r\n//           if (ar.length > size) {\r\n//             ar.splice(0, ar.length - size);\r\n//             Log.write(key, ar);\r\n//           }\r\n//         }\r\n//       }\r\n//       Log.limit = size;\r\n//     }\r\n//   }\r\n// }\r\n","\r\nexport enum SpDataType {\r\n   Integer = 1,\r\n   Text = 2,\r\n   Note = 3,\r\n   DateTime = 4,\r\n   Choice = 6,\r\n   Lookup = 7,\r\n   Boolean = 8,\r\n   Number = 9,\r\n   Attachments = 19,\r\n   User = 20\r\n}\r\n\r\nexport enum Odata {\r\n   None = 'nometadata',\r\n   Mini = 'minmetadata',\r\n   Verbose = 'verbose'\r\n}\r\n\r\n/// ---  ---\r\nexport function buildQuery(query: any): string {\r\n   /// build query string\r\n   let qString = '';\r\n\r\n   if (query) {\r\n      if (query.select)\r\n         qString += `${qString.includes('?$') ? '&$' : '?$'}select=${query.select}`;\r\n\r\n      if (query.filter)\r\n         qString += `${qString.includes('?$') ? '&$' : '?$'}filter=${query.filter}`;\r\n\r\n      if (query.orderby)\r\n         qString += `${qString.includes('?$') ? '&$' : '?$'}orderby=${query.orderby}`;\r\n\r\n      if (query.expand)\r\n         qString += `${qString.includes('?$') ? '&$' : '?$'}expand=${query.expand}`;\r\n\r\n      if (query.top)\r\n         qString += `${qString.includes('?$') ? '&$' : '?$'}top=${query.top}`;\r\n\r\n      if (query.skip)\r\n         qString += `${qString.includes('?$') ? '&$' : '?$'}skip=${query.skip}`;\r\n   }\r\n   return qString;\r\n}\r\n\r\n/// ---  ---\r\nexport function extractData(obj: any) {\r\n   return obj?.value || obj?.d?.results || obj?.d || obj;\r\n}\r\n\r\n/**\r\n * Sp Form Digest\r\n */\r\nexport class FormDigest {\r\n   static url = location.origin;\r\n   private static fDigest: any = {};\r\n\r\n   static async get(url = FormDigest.url) {\r\n      if (!!FormDigest.fDigest.value \r\n         && new Date().getTime() < FormDigest.fDigest?.expires) {\r\n         return FormDigest.fDigest.value;\r\n      }\r\n\r\n      try {\r\n         const res = await fetch(`${url}/_api/contextinfo`, {\r\n            method: 'POST',\r\n            headers: { 'accept': 'application/json;odata=nometadata' }\r\n         });\r\n         const fd = await res.json();\r\n         FormDigest.fDigest = {\r\n            value: fd.FormDigestValue,\r\n            expires: new Date(fd.FormDigestValue.split(',')[1]).getTime() + 1799950 // will expire in (30min - 50ms)\r\n         };\r\n\r\n         return FormDigest.fDigest.value;\r\n      }\r\n\r\n      catch (err) {\r\n         throw (err);\r\n      }\r\n   }\r\n}\r\n\r\n/// --- getHttpOption(args?:any) ---\r\nexport async function getHttpOption(args: any) {\r\n   const xhm = args.xMethod.toUpperCase();\r\n   const cnt = `application/${args.type || 'json'};odata=${args.odata || 'nometadata'}`;\r\n   let opt: any = {\r\n      method: xhm === 'GET' ? 'GET' : 'POST',\r\n      headers: { 'Accept': cnt },\r\n      responseType: args?.type || 'json'\r\n   };\r\n\r\n   /// GET\r\n   if (xhm === 'GET') return opt;\r\n\r\n   opt.headers['Content-Type'] = cnt;\r\n   opt.headers['X-RequestDigest'] = await FormDigest.get();\r\n   if (args?.data) {\r\n      opt.body = args.type === 'json' ? JSON.stringify(args.data) : args.data;\r\n   }\r\n\r\n   /// POST, ADD\r\n   if (xhm === 'POST' || opt.method === 'ADD') return opt;\r\n\r\n   /// UPDATE (MERGE, PUT), DELETE\r\n   opt.headers['X-HTTP-Method'] = xhm;\r\n   opt.headers['If-Match'] = '*';\r\n   return opt;\r\n}\r\n \r\n/// --- httpAsync(uri:string, args?:any) ---\r\nexport async function httpAsync(endpoint: string, args: any = { xMethod: 'get', odata: 'nometadata', type: 'json' }) {\r\n   const opt = await getHttpOption(args);\r\n   const res = await fetch(endpoint, opt);\r\n   \r\n   if (res?.statusText === 'No Content') return extractData(res);\r\n\r\n   try {\r\n      let dat = await res[args.type]();\r\n      // let dat = await eval(`res.${args.type}()`);\r\n      return extractData(dat);\r\n   }\r\n   catch (err) {\r\n      console.warn('Failed to convert\\n', res, `[${args.type}]()\\nError:`, err);\r\n      return res;\r\n   }\r\n}\r\n\r\n/// --- user ---\r\nexport function spUser(id?: number, query?: any) {\r\n   let uri = (id)\r\n      ? `${location.origin}/_api/web/GetUserById(${id})`\r\n      : `${location.origin}/_api/web/currentuser`\r\n\r\n   return httpAsync(uri + buildQuery(query));\r\n}\r\n\r\n/// --- recycle ---\r\nexport function recycleBinAsync(url = location.origin) {\r\n   return httpAsync(`${url}/_api/web/recyclebin`);\r\n}\r\n\r\nexport function restoreAsync(id: number | string, url = location.origin) {\r\n   if (typeof (id) == 'string')\r\n      return httpAsync(`${url}/_api/web/recyclebin('${id}')/restore()`, { xMethod: 'post' });\r\n   else if (typeof (id) == 'number')\r\n      return httpAsync(`${url}/_api/web/recyclebin(${id})/restore()`, { xMethod: 'post' });\r\n   else\r\n      throw ('Error: Invalid ID type');\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { spUser, httpAsync } from './sp-utils';\n\nexport function appInit(svc: SpAppInitService) {\n  return () => svc.initApp();\n}\n\n@Injectable({ providedIn: 'root' })\nexport class SpAppInitService {\n  setting: any;\n  metafile: any;\n  user: any;\n  config: any;\n\n  // constructor() {}\n\n  getSettings() {\n    if (window['ndApp']) {\n      /// declared in SP page (index.aspx)\n      let mode = window['ndApp'].mode;\n      return {\n        name: '',\n        mode: mode,                     /// mode<string>: either 'dev' or 'prod'\n        env: window['ndApp'].env[mode]  /// env: { url<obj>, configFile<obj> }\n      }\n    }\n\n    alert('No config settings found.');\n    return;\n  }\n\n  private getCurrentUserAsync() {\n    let qry = {\n      select: 'ID,Title,Email,LoginName,Groups/Title,Groups/Id',\n      expand: 'Groups'\n    }\n    return spUser(null, qry);\n  }\n\n  private getConfigFileAsync(metafile=this.metafile) {\n    let uri = `${this.metafile.url}/_api/Web/GetFolderByServerRelativeUrl('${this.metafile.relative}')/files('${this.metafile.name}')/$value`;\n    return httpAsync(uri);\n  }\n\n\n  setUserRoles(user: any, config: any) {\n    if (user?.Groups && config?.roles) {\n      let groupIds = user.Groups.map((g: any) => g.Id);\n      user.roles = {};\n\n      for (let name in config.roles) {\n        user.roles[name] = groupIds.indexOf(config.roles[name]) > -1;\n\n        if (!user.authorized && ('authorizes' in config) && user.roles[name]) {\n          user.authorized = config.authorizes.includes(name);\n        }\n      }\n    }\n  }\n\n  private init(config:any[]) {\n    if (config?.length > 0) {\n      this.user = config[0];\n      this.config = config[1];\n      this.setUserRoles(this.user, this.config);\n    }\n  }\n\n  initApp(): Promise<any> {\n    try {\n      return new Promise((resolve, reject) => {\n        this.setting = this.getSettings();\n        this.metafile = this.setting.env.configFile;\n        Promise.all([\n          this.getCurrentUserAsync(),\n          this.getConfigFileAsync()\n        ])\n        .then((res: any[]) => {\n          this.init(res);\n          resolve(true);\n        })\n        .catch(err => {\n          alert('Failed to initialize the app.\\n' + JSON.stringify(err));\n          console.error('Failed to initialize the app.', err);\n          reject(err);\n        })\n      });\n    }\n\n    catch(err) {\n      alert('App Init Error:\\n' + err);\n    }\n  }\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpClient, HttpResponse }\n  from '@angular/common/http';\nimport { Observable, Subject, from, throwError } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { catchError, map, mergeMap, tap } from 'rxjs/operators';\nimport { Odata, getHttpOption, extractData } from './sp-utils';\n\nexport const Error$ = new Subject<any>();\nexport const Busy$ = new Subject<boolean>();\n\n@Injectable({ providedIn: 'root' })\nexport class BaseService implements HttpInterceptor {\n  private _current:any = {\n    request: undefined, response: undefined, error: undefined\n  };\n\n  constructor(private http: HttpClient) {\n    Busy$.subscribe({ next: (bool) => bool });\n  }\n\n  get current() { return this._current; }\n\n  intercept(req: HttpRequest<any>, next: HttpHandler) { //: Observable<HttpEvent<any>> {\n    Busy$.next(true);\n    this._current.request = req;\n\n    return next.handle(req).pipe(\n      tap(res => {\n        if (res instanceof HttpResponse) {\n          this._current.response = res;\n          Busy$.next(false);\n        }\n      }),\n      catchError(err => {\n        Busy$.next(false);\n\n        this._current.error = err;\n        const error = {\n          'caught in': 'HTTP intercept',\n          request: this.current.request,\n          error: err\n        };\n        Error$.next(error);\n        return throwError(error);\n      })\n    );\n  }\n\n  fetch(endpoint: string, args:any = this.createArg()): Observable<any> {\n    return (args.xMethod.localeCompare('get', 'en', { sensitivity: 'base' }) === 0\n      || !args?.xMethod)\n \n      ? from(getHttpOption(args)).pipe(\n          mergeMap((opt: any) => this.http.get(endpoint, opt)),\n          map(extractData)\n        )\n      : from(getHttpOption(args)).pipe(\n          mergeMap((opt: any) => this.http.post(endpoint, args.data, opt)),\n          map(extractData)\n        );\n  }\n\n  get(uri:string, odata='nometadata', respType='json'):Observable<any> {\n    const arg = this.createArg('get', odata, respType);\n    return this.fetch(uri, arg);\n  }\n\n  post(uri:string, data?:any, xMethod='post', odata=Odata.None, type='json'):Observable<any> {\n    const arg = this.createArg(xMethod, odata, type, data);\n    return this.fetch(uri, arg);\n  }\n\n  delete(uri:string): Observable<any> {\n    return this.fetch(uri, this.createArg('delete'));\n  }\n\n  recycleBin(url:string, odata='nometadata', respType='json') {\n    const uri = `${url}/_api/web/recyclebin`,\n      arg = this.createArg('get', odata, respType);\n    return this.fetch(uri, arg);\n  }\n\n  recycle(uri:string): Observable<any> {\n    return this.fetch(`${uri}/recycle`, this.createArg('delete'));\n  }\n\n  restore(id:string, url:string): Observable<any> {\n    const uri = `${url}/_api/web/recyclebin('${id}')/restore()`;\n    return this.fetch(uri, this.createArg('post'));\n  }\n\n  ///---\n  private createArg(xMethod='get', odata='nometadata', type='json', data?:any) {\n    return {\n      xMethod: xMethod,\n      odata: odata,\n      type: type,\n      data: data\n    };\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { of } from 'rxjs';\nimport { buildQuery } from './sp-utils';\nimport { BaseService, Error$ } from './base.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpListService {\n  metalist:any;\n\n  constructor(private svc:BaseService) {}\n\n  ///--- return endpoint/uri for SP list(s)\n  uri(metalist:any) {\n    if (!metalist) {\n      let msg = \n        `Could not create Endpoint for invalid list info.\n        Requires object with 'url' and 'title' or 'guid' properties.`;\n      alert(msg);\n      throw(msg);\n    }\n\n    let url:string;\n    if (typeof metalist === 'string') {\n      url = metalist.toLowerCase().split('/lists/')[0];\n      return `${url}/_api/lists`;\n    }\n\n    /// get web url where the list resides\n    url = metalist.url.toLowerCase().split('/lists/')[0];\n\n    if (metalist.title?.length) {\n      return `${url}/_api/lists/getbytitle('${metalist.title}')`;\n    }\n    else if (metalist.guid?.length) {\n      return `${url}/_api/lists('${metalist.guid})`;\n    }\n    return `${url}/_api/lists`;\n  }\n\n  generateMetalist(metalist:any, title?:string) {\n    if (typeof metalist === 'string' && title?.length)\n      return { url: metalist, title: title };\n  \n    if ((title || metalist.title || metalist.guid) && metalist.url)\n      return {\n        title: title || metalist.title,\n        guid: metalist.guid,\n        url: metalist.url\n      };\n\n    Error$.next({\n      Title: 'Error',\n      Cat: 'Error',\n      Action: 'Failed to build URI Invalid meta-list - missing required List Title/URL.',\n      Detail: metalist\n    });\n    return;\n  }\n\n  get = (metalist=this.metalist) => {\n    return this.svc.get(this.uri(metalist));\n  };\n\n  query = (query:any, metalist=this.metalist.url) => {\n    let uri = this.uri(metalist) + buildQuery(query);\n    return this.svc.get(uri);\n  };\n\n  add = (data:any, metalist=this.metalist) => {\n    let url = (typeof metalist === 'string') ? metalist : metalist.url;\n    return this.svc.post(this.uri(url), data);\n  };\n\n  update = (data:any, title?:string, metalist=this.metalist) => {\n    let ml = this.generateMetalist(metalist, title);\n    return ml ? this.svc.post(this.uri(ml), data, 'merge') : of();\n  };\n\n  recycle = (title:string, metalist=this.metalist) => {\n    let ml = this.generateMetalist(metalist, title);\n    return ml \n      ? this.svc.fetch(`${this.uri(ml)}/recycle`, { xMethod: 'deletel' }) \n      : of();\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { concat, from, of } from 'rxjs';\nimport { concatMap, map, mergeMap } from 'rxjs/operators';\nimport { Odata, buildQuery, httpAsync } from './sp-utils';\nimport { Error$, BaseService } from './base.service';\nimport { fileRead } from './common';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListItemService {\n  private metalist:any;\n  metafields = [\n    'FileSystemObjectType', 'ContentTypeId', 'OData__UIVersionString',\n    'GUID', 'Modified', 'Created',\n    'Author', 'AuthorId', 'Editor', 'EditorId',\n    'Attachments', 'AttachmentFiles'\n  ];\n\n  constructor(private svc:BaseService) {}\n\n  set(metalist:any) {\n    this.metalist = metalist;\n  }\n\n  ///--- return endpoint/uri for SP list, items, or item\n  uri = {\n    list: (metalist=this.metalist) => {\n      try {\n        let url = metalist.url.toLowerCase().split('/lists')[0];\n        let uri = `${url}/_api/lists`;\n\n        if (metalist.title) return `${uri}/GetByTitle('${metalist.title}')`;\n        if (metalist.guid) return `${uri}('${metalist.guid}')`;\n        return uri;\n      }\n      catch(err) {\n        Error$.next({\n          Title: 'Error',\n          Cat: 'Error',\n          Action: 'Failed to build URI string.',\n          Detail: err\n        });\n        throw(err);\n      }\n    },\n\n    items: (metalist=this.metalist) => `${this.uri.list(metalist)}/items`,\n\n    item: (id:number, metalist=this.metalist) => `${this.uri.items(metalist)}(${id})`,\n\n    fields: (metalist=this.metalist) => `${this.uri.list(metalist)}/fields`\n  };\n  \n  /// attach files\n  attachSingle = (id:number, file:any, metalist=this.metalist) => {\n    let filename = file.renamed || file.name;\n    let uri = `${this.uri.item(id, metalist)}/AttachmentFiles/add(FileName='${filename}')`;\n\n    return fileRead(file, 'array-buffer').pipe(\n      mergeMap(buffer => this.svc.post(uri, buffer, 'post'))\n    );\n  };\n\n  detach = (id:number, filename:string, metalist=this.metalist) => {\n    let uri = `${this.uri.item(id, metalist)}/AttachmentFiles('${filename}')`;\n    return this.svc.delete(uri);\n  };\n\n  replaceAttachment = (id:number, file:any, metalist=this.metalist) => {\n    let filename = file.renamed || file.name;\n    return this.detach(id, filename, metalist).pipe(\n      concatMap((deleted) => this.attachSingle(id, file, metalist))\n    );\n  };\n\n  /// return files attached\n  attach = (id:number, files:any[], metalist=this.metalist) => {\n    return (id && files.length)\n      ? from(files).pipe(\n          concatMap(file => file.replaced\n            ? this.replaceAttachment(id, file, metalist)\n            : this.attachSingle(id, file, metalist)\n          ),\n        )\n      : of();\n  };\n\n  ///\n  get = (id?:number, query?:any, metalist=this.metalist, odata=Odata.None, type='json') => {\n    let \n      uri:string, \n      qry = query || metalist.query;\n    if (id) {\n      let _qry = { \n        select: qry?.select, \n        expand: qry?.expand\n      };\n      uri = `${this.uri.item(id, metalist)}${buildQuery(_qry)}`;\n    }\n    else {\n      uri = `${this.uri.items(metalist)}${buildQuery(qry)}`;\n    }\n\n    return this.svc.get(uri, odata, type);\n  };\n\n  query = (query:any, metalist=this.metalist) => {\n    return this.get(null, query, metalist);\n  };\n\n  /// return added with attachments\n  add = (data:any, attachments?:any[], metalist=this.metalist, odata=Odata.None, type='json') => {\n    let uri = this.uri.items(metalist);\n    let resp$ = this.svc.post(uri, data, 'post', odata, type);\n\n    if (!attachments?.length) return resp$;\n  \n    let result:any = {};\n    return resp$.pipe(\n      concatMap((added:any) => {\n        result = added;\n        return this.attach(added.ID, attachments, metalist);\n      }),\n      map(attached => {\n        result.AttachmentFiles \n          ? result.AttachmentFiles.push(attached)\n          : result.AttachmentFiles = [attached];\n        return result;\n      })\n    );\n  };\n\n  update = (data:any, attachments?:any[], metalist=this.metalist, odata=Odata.None, type='json') => {\n    let uri = this.uri.item(data.ID, metalist);\n    let arg = { xMethod: 'merge', data: data, odata: odata, type: type };\n\n    /// remove read-only fields before updating\n    for (let field of this.metafields) delete data[field];\n\n    /// remove lookup fields\n    if (metalist?.query?.expand) {\n      let lookups = metalist.query.expand.split(',');\n      for (let field of lookups) delete data[field];\n    }\n    \n    let response$ = this.svc.fetch(uri, arg);\n    return (attachments?.length)\n      ? concat(response$, this.attach(data.ID, attachments, metalist))\n      : response$;\n  };\n\n  recycle = (item:any, metalist=this.metalist) => {\n    try {\n      let id = item?.ID || item;\n      if (!!id && !!metalist)\n        return this.svc.recycle(this.uri.item(id, metalist));\n        \n      alert('Invalid ID.');\n      return of('Invalid ID or metalist.')\n    }\n    catch(err) {\n      return of(err);\n    }\n  };\n\n  ///\n  getFieldChoices = (column:string, metalist=this.metalist) => {\n    let uri = `${this.uri.fields(metalist)}/getbytitle('${column}')`;\n    if (metalist.query) uri += buildQuery(metalist.query);\n    // return this.svc.get(uri);\n    return this.svc.fetch(uri);\n  };\n\n\n  queryAsync = (query?:any, metalist=this.metalist, odata=Odata.None, respType='json') => {\n    const uri = `${this.uri.items(metalist)}${buildQuery(query || metalist.query)}`;\n    return httpAsync(uri, { xMethod: 'get', odata: odata, type: respType });\n  };\n\n  addAsync = (data:any, metalist=this.metalist, odata=Odata.None, respType='json') => {\n    let uri = this.uri.items(metalist);\n    return httpAsync(uri, { xMethod: 'post', data: data, odata: odata, type: respType });\n  };\n\n  updateAsync = (data:any, metalist=this.metalist, odata=Odata.None, respType='json') => {\n    let uri = this.uri.item(data.ID, metalist);\n\n    /// remove read-only fields before updating\n    for (let field of this.metafields) delete data[field];\n\n    /// remove lookup fields\n    if (metalist?.query?.expand) {\n      let lookups = metalist.query.expand.split(',');\n      for (let field of lookups) delete data[field];\n    }\n\n    return httpAsync(uri, { xMethod: 'merge', data: data, odata: odata, type: respType });\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { mergeMap } from 'rxjs/operators';\nimport { Odata, buildQuery } from './sp-utils';\nimport { BaseService, Error$ } from './base.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListFieldService {\n  private metalist:any;\n  readonly: [\n    'FileSystemObjectType', 'ContentTypeId', 'OData__UIVersionString',\n    'GUID', 'Modified', 'Created',\n    'Author', 'AuthorId', 'Editor', 'EditorId',\n    'Attachments', 'AttachmentFiles'\n  ];\n  creation: ['Title', 'FieldTypeKind', 'Choices', 'LookupList', 'ReadOnlyField', 'Required'];\n  \n  constructor(private svc:BaseService) { }\n\n  set(metalist:any) {\n    this.metalist = metalist;\n  }\n\n  uri = {\n    list: (metalist=this.metalist) => {\n      try {\n        let url = metalist.url.toLowerCase().split('/lists')[0];\n        let uri = `${url}/_api/lists`;\n\n        if (metalist.title) return `${uri}/GetByTitle('${metalist.title}')`;\n        if (metalist.guid) return `${uri}('${metalist.guid}')`;\n        return uri;\n      }\n      catch(err) {\n        Error$.next({\n          Title: 'Error',\n          Cat: 'Error',\n          Action: 'Failed to build URI string.',\n          Detail: err\n        });\n        return;\n      }\n    },\n\n    fields: (metalist=this.metalist) =>\n      `${this.uri.list(metalist)}/fields`,\n    \n    field: (title:string, metalist=this.metalist) =>\n      `${this.uri.list(metalist)}/fields/getbytitle('${title}')`,\n\n    fieldById: (guid:string, metalist=this.metalist) =>\n      `${this.uri.list(metalist)}/fields('${guid}')`\n  }\n\n  get = (title?:string, metalist=this.metalist, query?:any) => {\n    let uri = this.uri.field(title, metalist);\n    return this.svc.get(uri + buildQuery(query || metalist.query));\n  };\n\n  getByGuid = (guid?:string, metalist=this.metalist, query?:any) => {\n    let uri = this.uri.fieldById(guid, metalist);\n    return this.svc.get(uri + buildQuery(query || metalist.query));\n  };\n\n  query = (qry:any, metalist=this.metalist) => {\n    return this.get(null, metalist, qry);\n  };\n\n  update = (data:any, metalist=this.metalist) => {\n    let uri = this.uri.fieldById(data.ID, metalist);\n    return this.svc.post(uri, data, 'merge');\n  };\n\n  add = (data:any, metalist=this.metalist) => {\n    let uri = `${this.uri.fields(metalist)}/addfield`;\n\n    /// sanitize data/field properties\n    let spField:any = { parameters: {} };\n    \n    for (let prop of this.creation) {\n      if (data[prop]) {\n        if (prop === 'Choices') \n          spField.parameters[prop] = { results: data[prop] };\n        \n        else if (prop === 'LookupList') {\n          spField.parameters['LookupListId'] = data[prop];\n          spField.parameters['LookupFieldName'] = data['LookupFieldName'] || 'Title';\n        }\n        \n        else\n          spField.parameters[prop] = data[prop];\n      }\n    }\n\n    /// EntityPropertyName !== Title\n    /// add field with Title = EntityPropertyName (so both have no white-spaces), then\n    /// update Title (may have white-spaces)\n\n    let add$ = this.svc.post(uri, spField, 'add', Odata.Verbose);\n    if (spField.parameters.Title === data.EntityPropertyName)\n      return add$;\n    \n    else {\n      spField.parameters.Title = data.EntityPropertyName\n\n      /// add\n      return add$\n\n      /// update field's Title\n      .pipe(\n        mergeMap((res:any) => this.update({ Id: res.ID, Title: data.Title }, metalist)),\n        mergeMap(() => this.get(data.Title, metalist))\n      );\n    }\n  };\n\n  delete = (field:any, metalist=this.metalist) => {\n    let uri = (field.ID)\n      ? this.uri.fieldById(field.ID, metalist)\n      : this.uri.field(field.Title, metalist);\n    return this.svc.delete(uri);\n  };\n\n  recycle = (field:any, metalist=this.metalist) => {\n    let uri = (field.ID)\n      ? this.uri.fieldById(field.ID, metalist)\n      : this.uri.field(field.Title, metalist);\n    return this.svc.recycle(uri);\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { from } from 'rxjs';\nimport { concatMap, mergeMap } from 'rxjs/operators';\nimport { Odata, buildQuery } from './sp-utils'\nimport { BaseService } from './base.service'\nimport { fileRead } from './common';\n\nexport enum LibItem {\n  File = 'files',\n  Folder = 'folders'\n}\nexport enum ResponseType {\n  ArrayBuffer = 'arrayBuffer',\n  Blob = 'blob',\n  Json = 'json',\n  Text = 'text'\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpFileService {\n\n  constructor(private svc:BaseService) {}\n  path:any;\n\n  endpoint(path:any, ftype?:LibItem) {\n    return (ftype)\n    ? `${path.url}/_api/Web/GetFolderByServerRelativeUrl('${path.relative}')/${ftype}`\n      : `${path.url}/_api/Web/GetFolderByServerRelativeUrl('${path.relative}')`;\n  }\n\n  info(path=this.path) {\n    return (path.name)\n      ? this.svc.get(`${this.endpoint(path)}/files('${path.name}')`)\n      : this.svc.get(this.endpoint(path));\n  }\n\n  all(path=this.path, query?:any) {\n    let qry = query || {\n      select: 'Files/Name,Files/ServerRelativeUrl,Folders/Name,Folders/ServerRelativeUrl',\n      expand: 'Files,Folders'\n    }\n    let uri = this.endpoint(path) + buildQuery(qry);\n    return this.svc.get(uri);\n  }\n\n  get(path=this.path, ftype=LibItem.File) {\n    return this.svc.get(this.endpoint(path, ftype));\n  }\n\n  query(query:any, path=this.path, ftype=LibItem.File) {\n    let uri = `${this.endpoint(path, ftype)}${buildQuery(query)}`;\n    return this.svc.get(uri);\n  }\n\n  single(path=this.path, ftype=LibItem.File) {\n    let uri = `${this.endpoint(path, ftype)}('${path.name}')`;\n    return this.svc.get(uri);\n  }\n\n  read(path=this.path, responseType=ResponseType.Json, odata=Odata.None) {\n    let uri = `${this.endpoint(path, LibItem.File)}('${path.name}')/$value`;\n    return this.svc.get(uri, odata, responseType);\n  }\n\n  add(content:any, path=this.path, ftype=LibItem.File, overwrite=false) {\n    let uri = `${this.endpoint(path, ftype)}/add(overwrite=${overwrite},url='${path.name}')`;\n    return this.svc.post(uri, content);\n  }\n\n  put(content:any, path=this.path, ftype=LibItem.File) {\n    let uri = `${this.endpoint(path, ftype)}('${path.name}')/$value`;\n    return this.svc.post(uri, content, 'put');\n  }\n\n  recycle(path=this.path, ftype=LibItem.File) {\n    let uri = `${this.endpoint(path, ftype)}('${path.name}')/recycle`;\n    return this.svc.fetch(uri, { xMethod: 'delete' });\n  }\n\n  /// single upload\n  singleUpload(file:any, path=this.path, overwrite=false) {\n    path.name = file.name;\n    \n    return fileRead(file, 'array-buffer').pipe(\n      mergeMap(buffer => this.add(buffer, path, LibItem.File, file.overwrite))\n    );\n  }\n\n  upload(files:any[], path=this.path) {\n    return from(files).pipe(\n      concatMap(file => this.singleUpload(file, path, file.overwrite))\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\n\n\n@NgModule({\n  exports: [    \n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class MaterialModule { }\n","\n<mat-tab-group mat-align-tabs=\"center\"\n   [selectedIndex]=\"index\"\n   (selectedTabChange)=\"tabChange($event.index)\"\n   (selectedIndexChange)=\"indexChange($event)\">\n   <mat-tab *ngFor=\"let item of items\" [label]=\"item.Created | date:'yyyy-MM-dd'\">\n      <div class=\"tab-content\" [style.height]=\"config.tabHeight ? config.tabHeight : 'auto'\"\n         (mouseover)=\"play(false)\" (mouseout)=\"play(true)\">\n         <a class=\"link font-18\" (click)=\"itemSelect.emit(item)\">{{item.Title}}</a>\n         <p [innerHtml]=\"item.Body | noSanitize\"></p>\n         <ul>\n            <li *ngFor=\"let file of item.AttachmentFiles\">\n               <a href=\"{{file.ServerRelativeUrl}}\" download>{{file.FileName}}</a></li>\n         </ul>\n         <code>{{item.Author.Title}}, expriration: {{item.Expires | date:'yyyy-MM-dd'}}</code>\n      </div>\n   </mat-tab>\n</mat-tab-group>\n\n<mat-action-row *ngIf=\"items?.length\">\n   <button mat-icon-button (click)=\"togglePlaying()\">\n      <span [style.color]=\"autoPlay ? '#ffd740' : 'green'\">\n         {{autoPlay ? '&#10074;&#10074;' : '&#9658;'}}\n      </span>\n   </button>\n   \n   <button mat-icon-button (click)=\"prev(false)\">&#x23ea;</button>\n   \n   <mat-slider min=\"0\" [max]=\"items.length - 1\" step=\"1\" [value]=\"index\"\n      #idx [thumbLabel]=\"index\"\n      (change)=\"indexChange(idx.value)\"></mat-slider>\n\n   <button mat-icon-button (click)=\"next(false)\">&#x23e9;</button>\n\n   <button mat-button (click)=\"listSelect.emit(list)\"\n      style=\"font-size:16px;\">📝 Manage</button>\n</mat-action-row>\n\n<mat-divider></mat-divider>\n","import { Component, OnInit, Input, Pipe, PipeTransform, Output, EventEmitter } from '@angular/core';\nimport { ListItemService } from '../../list-item.service';\nimport { interval } from 'rxjs';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser'\n\n@Component({\n  selector: 'lib-announcement',\n  templateUrl: './announcement.component.html',\n  styleUrls: ['./announcement.component.css']\n})\nexport class AnnouncementComponent implements OnInit {\n  @Input() list:any;\n  @Input() config:any;\n  @Output() itemSelect = new EventEmitter<any>();\n  @Output() listSelect = new EventEmitter<any>();\n  items:any;\n  index:number;\n  delay:any;\n  isPlaying:boolean = false;\n  autoPlay:boolean = true;\n  private firstChange = true;\n\n  constructor(private lis:ListItemService) { }\n\n  ngOnInit(): void {\n    if (!this.list.query) {\n      this.list.query = {\n        select: 'ID,Title,Body,Expires,Created,Modified,Author/Title,AttachmentFiles/FileName,AttachmentFiles/ServerRelativeUrl',\n        expand: 'Author,AttachmentFiles',\n        orderby: 'ID desc'\n      }\n    }\n\n    this.lis.query(this.list.query, this.list)\n    .subscribe(res => {\n      if (res?.length) {\n        this.items = res;\n        this.play(true);\n      }\n    });\n  }\n\n  prev(auto = this.autoPlay) {\n    this.index = (this.index == 0) ? this.items.length - 1 : this.index - 1;\n    \n    this.autoPlay = auto;\n    if (!auto) this.delay.unsubscribe();\n  }\n  next(auto = this.autoPlay) {\n    this.index = (this.index + 1) % this.items.length;\n    \n    this.autoPlay = auto;\n    if (!auto) this.delay.unsubscribe();\n  }\n\n  tabChange(idx) {\n    if (!this.firstChange) {      \n      if (idx != this.index) {\n        this.autoPlay = false;\n        this.play(false);\n      }\n    }\n    else {\n      this.firstChange = false;\n    }\n    this.index = idx;\n  }\n\n  indexChange(idx) {\n    this.tabChange(idx);\n  }\n\n  play(bool:boolean) {\n    if (this.autoPlay)\n      bool \n      ? this.delay = interval(this.config.duration || 4000).subscribe(() => this.next()) \n      : this.delay.unsubscribe();\n    \n    else\n        if (!this?.delay?.isStopped) this.delay.unsubscribe();\n\n  }\n\n  togglePlaying() {\n    this.autoPlay = !this.autoPlay;\n    this.play(this.autoPlay);\n  }\n}\n\n@Pipe({ name: 'noSanitize' })\nexport class NoSanitizePipe implements PipeTransform {\n  constructor(private domSanitizer:DomSanitizer) {}\n\n  transform(html:string):SafeHtml {\n    return this.domSanitizer.bypassSecurityTrustHtml(html);\n  }\n}","\n<div class=\"dropzone\" [ngClass]=\"{'hover': isHovered}\">\n   <button mat-raised-button class=\"browse\" color=\"accent\">\n      <!-- <input *ngIf=\"single\" type=\"file\" single (change)=\"preupload($event.target.files)\">\n      <input *ngIf=\"!single\" type=\"file\" multiple (change)=\"upload($event.target.files)\"> -->\n      <input type=\"file\" multiple (change)=\"upload($event.target.files)\">\n      <span style=\"font-size:18px; text-align:center;\">\n         Browse/drop files here...\n      </span><br>\n      Please do not upload/attach files containing sensitive data (information).<br>\n      Note: special characters in file name will be removed before attaching/uploading.\n   </button>\n\n   <div *ngIf=\"uploading?.length\" style=\"margin-top:16px;\">\n      <mat-chip-list aria-label=\"Upload Files\">\n         <mat-chip *ngFor=\"let file of uploading; let i=index\" \n            [selectable]=\"true\" (click)=\"fileSelect(file, 'uploading')\"\n            [removable]=\"true\" (removed)=\"detachFile(i)\"\n            [disabled]=\"duplicates.length > 0\">\n            <span [class.accent-fg]=\"duplicated(i)\">{{file.renamed || file.name}}</span>\n            <mat-icon matChipRemove>&#x2718;</mat-icon>\n         </mat-chip>      \n      </mat-chip-list><br>\n   </div>\n\n   <div *ngIf=\"duplicates?.length\" class=\"accent\">\n      <p class=\"accent-fg\">\n         <span [matBadge]=\"duplicates.length\" matBadgeOverlap=\"false\" matBadgeColor=\"warn\">\n            Duplicated files\n         </span>\n         <br>Files already exist. Would you like to replace them?\n      </p>\n\n      <div *ngFor=\"let i of duplicates\" class=\"row center\">\n         <ng-container *ngIf=\"uploading[i]\">\n            <div class=\"col-4\">\n               <!-- <mat-label>Replace \"{{uploading[i].name}}\"?</mat-label> -->\n               <mat-label>Replace \"{{uploading[i].renamed}}\"?</mat-label>\n            </div>\n\n            <div class=\"col-4\">\n               <mat-radio-group color=\"warn\"\n                  [value]=\"uploading[i].overwrite\"\n                  (change)=\"markReplaced($event.value, i)\">\n                  <mat-radio-button [value]=\"true\">Yes</mat-radio-button>\n                  <mat-radio-button [value]=\"false\">No</mat-radio-button>\n               </mat-radio-group>\n            </div>\n         </ng-container>\n      </div>\n   </div>\n\n   <div *ngIf=\"uploaded?.length\" style=\"margin-top:16px;\">      \n      <mat-chip-list aria-label=\"File selection\">\n         <mat-chip *ngFor=\"let file of uploaded\" \n            [selectable]=\"true\" (click)=\"fileSelect(file, 'updated')\"\n            [removable]=\"true\" (removed)=\"deleteEvent.emit(file)\"\n            [disabled]=\"duplicates?.length > 0\">\n            <a href=\"{{file.ServerRelativeUrl}}\" target=\"_blank\">{{file.Name || file.FileName}}</a>\n            <mat-icon color=\"warn\" matChipRemove>&#x2718;</mat-icon>\n         </mat-chip>      \n      </mat-chip-list>\n   </div>\n</div>\n","import { Component, Input, Output, EventEmitter, HostListener } from '@angular/core';\nimport { merge, findDuplicates } from '../../common';\n\n@Component({\n  selector: 'lib-file-input',\n  templateUrl: './file-input.component.html'\n  // styleUrls: ['./file-input.component.css']\n})\nexport class FileInputComponent {\n  // @Input() single:boolean;\n  @Input() uploaded:any[];\n  @Input() uploading:any[];\n  @Output() uploadingChange = new EventEmitter<any>();\n  @Output() selectEvent = new EventEmitter<any>();\n  @Output() deleteEvent = new EventEmitter<any>();\n\n  isHovered:boolean;\n  duplicates:any[] = []; /// duplicated files\n  supportDocs$:any;\n\n  private addProp(file:any, prop:string, expr:any = /[~`!@#$%\\^&*()+=\\[\\]\\\\';,/{}|\":<>\\?]/g) {\n    file[prop] = file.name.replace(expr, '');\n  }\n\n  duplicated(idx:number) {\n    return this.duplicates.includes(idx);\n  }\n\n  markReplaced(replaced:boolean, idx:number) {\n    /// remove idx (duplicated file index) from duplicates\n    let i = this.duplicates.indexOf(idx);\n    this.duplicates.splice(i, 1);\n\n    /// mark 'replaced' for replacing/overwriting\n    if (this.uploading[idx]) this.uploading[idx].replaced = replaced\n\n    if (this.duplicates.length < 1) {\n      this.uploading = this.uploading\n        .filter((file:any) => file.replaced || file.replaced === undefined);\n      this.uploadingChange.emit(this.uploading);\n    }\n  }\n\n  upload(fileList:FileList) {\n    if (fileList?.length) {\n      /// convert file-list to array, add 'renamed' prop without specical characters      \n      let files = [];\n      for (let i = 0; i < fileList.length; i++) {\n        this.addProp(fileList[i], 'renamed');\n        files.push(fileList[i]);\n      }\n\n      /// remove duplicates in uploading files\n      if (!this.uploading) this.uploading = [];        \n      this.uploading = merge(this.uploading, files, 'renamed', 'string');\n\n      /// confirm to replace if duplicates in uploading/uploaded files\n      if (this.uploaded?.length > 0) {\n        /// is uploaded an attachment (goes by 'FileName')\n        /// OR a file (goes by 'Name') in lib/folder\n        let key = ('FileName' in this.uploaded[0]) ? 'FileName' : 'Name';\n        this.duplicates = findDuplicates(this.uploading, 'renamed', this.uploaded, key);\n        if (this.duplicates?.length < 1 && this.uploading?.length > 0) {\n          this.uploadingChange.emit(this.uploading);\n        }\n      }\n\n      else this.uploadingChange.emit(this.uploading);\n    }\n  }\n\n  ///\n  @HostListener('dragover', ['$event'])\n  onDragOver(evt:Event) {\n    evt.preventDefault();\n    evt.stopPropagation();\n    this.isHovered = true;\n  }\n  \n  ///\n  @HostListener('dragleave', ['$event'])\n  onDragLeave(evt:Event) {\n    evt.preventDefault();\n    evt.stopPropagation();\n    this.isHovered = false;\n  }\n\n  /// drop files\n  @HostListener('drop', ['$event'])\n  onDrop(evt:any) {\n    evt.preventDefault();\n    evt.stopPropagation();\n    this.isHovered = false;\n\n    this.upload(evt.dataTransfer.files);\n  }\n\n  /// remove uploading files\n  detachFile(index:number) {\n    this.uploading.splice(index, 1);\n\n    if (this.duplicates?.length > 0) {\n      let i = this.duplicates.indexOf(index);\n      this.markReplaced(false, i);\n    }\n\n    else this.uploadingChange.emit(this.uploading);\n  }\n\n  fileSelect(file:any, from:string) {\n    this.selectEvent.emit({ file: file, from: from });\n  }\n}\n","<style>\n.mat-checkbox {\n   white-space: nowrap;\n   overflow: hidden;\n   text-overflow: ellipsis;\n}\nth.mat-header-cell,\ntd.mat-cell,\ntd.mat-footer-cell {\n   padding: 0 0.25em;\n}\n\n::ng-deep .right .mat-sort-header-container {\n   justify-content: flex-end;\n   text-align: right;\n}\n\n/*** dashboard */\n\n.progress-container { position: relative; text-align:right; padding:8px 0px; background:#ffe; display:flex; }\n.progress-bar { position:absolute; top:0px; height:100%; background-color: rgba(255,160,4,.5); }\n.progress-border { position:absolute; top:0px; height:100%; border-top: 2px rgb(255,160,4) solid; }\n.progress-container span { padding: 0px 8px; }\n\n</style>\n\n<mat-accordion multi>\n   <!--- Display Columns --->\n   <mat-expansion-panel>\n      <mat-expansion-panel-header>\n         <mat-panel-title>Display Columns</mat-panel-title>\n         <mat-panel-description>Show/hide columns</mat-panel-description>\n      </mat-expansion-panel-header>\n\n      <div class=\"row\">\n         <mat-checkbox class=\"col-2\" *ngFor=\"let field of list.fields; first as first\"\n            [value]=\"field.EntityPropertyName\" \n            [checked]=\"isDisplayed(field.EntityPropertyName)\"\n            [disabled]=\"list.dashboard && first\"\n            (change)=\"changeField(field.EntityPropertyName, $event.checked)\">{{field.Title}}\n         </mat-checkbox>\n      </div>\n   </mat-expansion-panel>\n\n   <!--- Search/filter --->\n   <mat-expansion-panel>\n      <mat-expansion-panel-header>\n         <mat-panel-title>Search/filter</mat-panel-title>\n         <mat-panel-description></mat-panel-description>\n      </mat-expansion-panel-header>\n\n      <div class=\"row center\">\n         <div class=\"col-3\">\n            <mat-form-field appearance=\"fill\">\n               <mat-label>Key/Column</mat-label>\n               <mat-select (selectionChange)=\"setKey()\" [(ngModel)]=\"search.key\">\n                  <mat-option *ngFor=\"let name of list.displays\" [value]=\"name\">{{Field[name]?.Title || name}}</mat-option>                  \n               </mat-select>\n            </mat-form-field>\n         </div>\n\n         <div class=\"col-3\">\n            <mat-form-field appearance=\"fill\" style=\"margin-left:20px;\">\n               <mat-label>Value</mat-label>\n               <input matInput type=\"search\" (input)=\"applyFilter()\" [(ngModel)]=\"search.value\">\n            </mat-form-field>\n         </div>\n         <span class=\"spacer\"></span>\n         <button mat-flat-button (click)=\"applyFilter(search.value = '')\">Clear filter</button>\n      </div>\n   </mat-expansion-panel>\n\n   <!--- Table --->\n   <mat-expansion-panel [expanded]=\"true\">\n      <mat-expansion-panel-header *ngIf=\"list.calc\">\n         <mat-panel-title>{{list.fields[0].Title}}</mat-panel-title>\n         <mat-panel-description></mat-panel-description>\n      </mat-expansion-panel-header>\n\n      <table mat-table #matTable [dataSource]=\"dataSource\" matSort style=\"width:100%;\">\n\n         <ng-container *ngFor=\"let name of list.displays; first as first\" matColumnDef=\"{{name}}\">\n            <ng-container *ngIf=\"first\">\n               <th mat-header-cell *matHeaderCellDef mat-sort-header>{{Field[name]?.Title}}</th>\n               <td mat-cell *matCellDef=\"let row\">\n                  <button mat-flat-button (click)=\"selectRow(row)\"\n                     [class]=\"cssClass ? cssClass(row[list.cssKey]) : row[list.cssKey]\">\n                     {{row[name]}}\n                     <!-- <span *ngIf=\"Field[name].FieldTypeKind == 7\">{{name}}:{{row[name].Title}}</span>\n                     <span *ngIf=\"Field[name].FieldTypeKind != 7\">{{name}}:{{row[name]}}</span>\n                     <span *ngIf=\"name == 'Author'\">{{row.Author.Title}}</span>\n                     <span *ngIf=\"name != 'Author'\">{{row[name]}}</span> -->\n                  </button>\n               </td>\n            </ng-container>\n\n            <ng-container *ngIf=\"!first\">\n               <ng-container [ngSwitch]=\"Field[name]?.FieldTypeKind\">\n                  <!-- align right -->\n                  <ng-container *ngSwitchCase=\"Field[name]?.FieldTypeKind==1\">\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"right\">{{Field[name]?.Title}}</th>\n                     \n                     <td mat-cell *matCellDef=\"let row\">\n                        <div class=\"progress-container\" *ngIf=\"list.calc\">\n                           <ng-container *ngIf=\"name=='Count'\">\n                              <div class=\"progress-bar\" [style.width]=\"row[name]/list.calc.count | percent:'1.2-2'\"></div>\n                              <span>{{row[name]/list.calc.count | percent:'1.2-2'}}</span>\n                              <span class=\"spacer\"></span>\n                              <span>{{row[name]}}</span>\n                           </ng-container>\n                           \n                           <ng-container *ngIf=\"name!='Count'\">\n                              <div class=\"progress-bar\" [style.width]=\"row[name]/list.calc.sum[name] | percent:'1.2-2'\"></div>\n                              <span>{{row[name]/list.calc.sum[name] | percent:'1.2-2'}}</span>\n                              <span class=\"spacer\"></span>\n                           <span>{{row[name] | number:'1.2-2'}}</span>\n                           </ng-container>\n                        </div>\n\n                        <div *ngIf=\"!list.calc\" style=\"text-align: right;\">{{row[name]}}</div>\n                     </td>\n                  </ng-container>\n\n                  <ng-container *ngSwitchCase=\"Field[name]?.FieldTypeKind==9 ? Field[name]?.FieldTypeKind : ''\">\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"right\">{{Field[name]?.Title}}</th>\n                     \n                     <td mat-cell *matCellDef=\"let row\">\n                        <div class=\"progress-container\" *ngIf=\"list.calc\">\n                           <ng-container *ngIf=\"name=='Count'\">\n                              <div class=\"progress-bar\" [style.width]=\"row[name]/list.calc.count | percent:'1.2-2'\"></div>\n                              <span>{{row[name]/list.calc.count | percent:'1.2-2'}}</span>\n                              <span class=\"spacer\"></span>\n                              <span>{{row[name]}}</span>\n                           </ng-container>\n                           \n                           <ng-container *ngIf=\"name!='Count'\">\n                              <div class=\"progress-bar\" [style.width]=\"row[name]/list.calc.sum[name] | percent:'1.2-2'\"></div>\n                              <span>{{row[name]/list.calc.sum[name] | percent:'1.2-2'}}</span>\n                              <span class=\"spacer\"></span>\n                           <span>{{row[name] | number:'1.2-2'}}</span>\n                           </ng-container>\n                        </div>\n\n                        <div *ngIf=\"!list.calc\" style=\"text-align: right;\">{{row[name] | number:'1.2-2'}}</div>\n                     </td>\n                  </ng-container>\n\n                  <!-- date -->\n                  <ng-container *ngSwitchCase=\"4\">\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header>{{Field[name]?.Title}}</th>\n                     <td mat-cell *matCellDef=\"let row\">{{row[name] | date:'yyyy-MM-dd'}}</td>\n                  </ng-container>\n                  \n                  <!-- object/lookup -->\n                  <ng-container *ngSwitchCase=\"Field[name]?.FieldTypeKind==7 || Field[name]?.FieldTypeKind==20 ? Field[name]?.FieldTypeKind : ''\">\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header>{{Field[name]?.Title}}</th>\n                     <td mat-cell *matCellDef=\"let row\">{{row[name]?.Title || row[name]}}</td>\n                  </ng-container>\n\n                  <!-- align left -->\n                  <ng-container *ngSwitchDefault>\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header>{{Field[name]?.Title}}</th>\n                     <td mat-cell *matCellDef=\"let row\">\n                        <span *ngIf=\"name == 'Author'\">{{row.Author?.Title}}</span>\n                        <span *ngIf=\"name != 'Author'\">{{row[name]}}</span>\n                     </td>\n                  </ng-container>\n               </ng-container>\n            </ng-container>\n         </ng-container>\n\n         <tr mat-header-row *matHeaderRowDef=\"list.displays\"></tr>\n         <tr mat-row *matRowDef=\"let row; columns: list.displays;\" (dblclick)=\"onDblClick(row)\"></tr>\n\n         <!-- Row shown when there is no matching data. -->\n         <tr class=\"mat-row\" *matNoDataRow>\n            <td class=\"mat-cell\" colspan=\"4\">No data matching the filter \"{{search.value}}\"</td>\n         </tr>\n      </table>\n      <mat-paginator [pageSizeOptions]=\"[10, 25, 50]\"></mat-paginator>\n   </mat-expansion-panel>\n</mat-accordion>\n\n<div *ngIf=\"!dataSource.data?.length\" style=\"text-align: center;\">\n   <h2>No data found.</h2>\n</div>\n","import { Component, OnChanges, AfterViewInit, Input, ViewChild, Output, EventEmitter } from '@angular/core';\n\nimport {MatTable, MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\n\n@Component({\n  selector: 'lib-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./../style.css']\n})\nexport class ListComponent implements OnChanges, AfterViewInit {\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  @ViewChild('matTable') matTable:MatTable<any>;\n\n  @Input() list:any;\n  /// list: { items:<any>, fields:<any>, displays?:<string[]>, cssKey:<string> }\n\n  @Input() cssClass:any;\n  /// function: returns css class name\n\n  @Output() selectEvent = new EventEmitter<any>();\n  /// $event: { action: select<string>, payload: selected-row<any> }\n\n  dataSource:any;\n  search:any = { key: 'Title', value: '' };\n\n  Field:any; /// column/field mapper\n  constructor() { this.dataSource = new MatTableDataSource(); }\n  \n  private _generateFields(obj:any) {\n    let fields:any[] = [];\n    for (let key in this.list.items[0]) {\n      fields.push({\n        EntityPropertyName: key,\n        Title: key,\n        FieldTypeKind: 2,\n        CssClass: 'col-3'\n      })\n    }\n    return fields;\n  }\n\n  ngOnChanges(): void {\n    if (this.list.items) {\n      /// fields: array -> object\n      if (this.list?.fields) {\n        this.Field = {};\n        this.list.fields.forEach(\n          (field:any) => this.Field[field.EntityPropertyName] = field\n        );\n      }\n\n      else {\n        this.list.fields = this._generateFields(this.list.items[0]);\n      }\n\n      // this.list.displays = (this.list.dashboard)\n      //   ? [...this.list.fields] \n      //   : this.list.displays || this.list.fields.map((field:any) => field.EntityPropertyName);\n      this.list.displays = this.list.displays\n        || this.list.fields.slice(0,5).map((field:any) => field.EntityPropertyName);\n\n      this.search.key = this.list.displays[0];\n        \n      // this.dataSource = new MatTableDataSource<any>(this.list.items);\n      this.dataSource.data = this.list.items;\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n\n      this.dataSource.filterPredicate = (data:any, value:string) => {\n        if (data[this.search.key]) {\n          let str = data[this.search.key].toString().toLowerCase();\n          return str.indexOf(value.toLowerCase()) > -1;\n        }\n        return;\n      };\n\n      this.list.cssKey = this.list.cssKey || 'Status';\n    }\n  }\n\n  ngAfterViewInit() {\n    // this.dataSource.paginator = this.paginator;\n  }\n\n  setKey(val:string = this.search.key) {\n    if (this.search.value) this.applyFilter(val);\n  }\n\n  applyFilter(val = this.search.value) {\n    this.dataSource.filter = val;\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  selectRow(row:any) {\n    this.selectEvent.emit({payload: row, action: 'select'});\n  }\n\n  onDblClick(row:any) {\n    this.selectEvent.emit({payload: row, action: 'double-click'});\n  }\n\n  getPercent(key:string, val:number) {\n    if (this.list.calc) return `${(val/this.list.calc.sum[key]).toFixed(2)}%`;\n  }\n\n  renderRows() {\n    this.matTable.renderRows();\n  }\n\n  updateRows(rows:any[]) {\n    this.dataSource.data = rows;\n  }\n\n  sliderLabel(val:number) {\n    return val.toFixed(1) + '%';\n  }\n\n  changeField(field:string, checked:boolean) {\n    this.list.displays = this.list.displays || [];\n    if (checked)\n      this.list.displays.push(field);\n    else {\n      let idx = this.list.displays.indexOf(field);\n      if (idx > -1) this.list.displays.splice(idx, 1);\n    }\n  }\n  \n  isDisplayed(field:string) {\n    return this.list.displays.indexOf(field) > -1;\n  }\n}","\n<form *ngIf=\"form\" [formGroup]=\"form\">\n   <div class=\"row\">\n      <div [class]=\"field.CssClass\" *ngFor=\"let field of fields\">\n         <ng-container [ngSwitch]=\"field.FieldTypeKind\">\n\n            <!-- integer -->\n            <mat-form-field [floatLabel]=\"fieldStyle.floatLabel\" [appearance]=\"fieldStyle.appearance\" *ngSwitchCase=\"dtype.Integer\">\n               <mat-label>{{field.Title}}</mat-label>\n               <input matInput type=\"number\" [formControlName]=\"field.EntityPropertyName\"\n                  min=\"{{field.min}}\" max=\"{{field.max}}\">\n               <mat-error>{{display(field.EntityPropertyName)}}</mat-error>\n               <mat-hint>{{display(field.EntityPropertyName)}}</mat-hint>  \n            </mat-form-field>\n            \n            <!-- text (single-line) -->\n            <mat-form-field [floatLabel]=\"fieldStyle.floatLabel\" [appearance]=\"fieldStyle.appearance\" *ngSwitchCase=\"dtype.Text\">\n               <mat-label>{{field.Title}}</mat-label>\n               <input matInput type=\"text\" [formControlName]=\"field.EntityPropertyName\">\n               <mat-error>{{display(field.EntityPropertyName)}}</mat-error>\n               <mat-hint>{{display(field.EntityPropertyName)}}</mat-hint>          \n            </mat-form-field>\n               \n            <!-- text (multi-line) -->\n            <mat-form-field [floatLabel]=\"fieldStyle.floatLabel\" [appearance]=\"fieldStyle.appearance\" *ngSwitchCase=\"dtype.Note\">\n               <mat-label>{{field.Title}}</mat-label>\n               <textarea matInput rows=\"2\" [formControlName]=\"field.EntityPropertyName\"></textarea>\n               <mat-error>{{display(field.EntityPropertyName)}}</mat-error>\n               <mat-hint>{{display(field.EntityPropertyName)}}</mat-hint>\n            </mat-form-field>\n\n            <!-- date -->\n            <mat-form-field [floatLabel]=\"fieldStyle.floatLabel\" [appearance]=\"fieldStyle.appearance\" *ngSwitchCase=\"dtype.DateTime\">\n               <mat-label>{{field.Title}}</mat-label>\n               <input matInput [matDatepicker]=\"dp\" [formControlName]=\"field.EntityPropertyName\">\n               <mat-datepicker-toggle matSuffix [for]=\"dp\"></mat-datepicker-toggle>\n               <mat-datepicker #dp></mat-datepicker>\n               <mat-error>{{display(field.EntityPropertyName)}}</mat-error>\n               <mat-hint>{{display(field.EntityPropertyName)}}</mat-hint>\n            </mat-form-field>\n\n            <!-- choice --\n            <mat-form-field *ngSwitchCase=\"dtype.Choice\"\n               [floatLabel]=\"fieldStyle.floatLabel\" \n               [appearance]=\"fieldStyle.appearance\">\n               <mat-label>{{field.Title}}</mat-label>\n               <mat-select [formControlName]=\"field.EntityPropertyName\">\n                  <mat-option *ngIf=\"!field.required\" value=\"N/A\">N/A</mat-option>\n                  <mat-option *ngFor=\"let opt of field.Choices\" [value]=\"opt\">{{opt}}</mat-option>\n               </mat-select>\n               <mat-error>{{display(field.EntityPropertyName)}}</mat-error>\n               <mat-hint>{{display(field.EntityPropertyName)}}</mat-hint>  \n            </mat-form-field> -->\n\n            <mat-form-field *ngSwitchCase=\"dtype.Choice\"\n               [floatLabel]=\"fieldStyle.floatLabel\" \n               [appearance]=\"fieldStyle.appearance\">\n               <mat-label>{{field.Title}}</mat-label>\n               <input matInput\n                  [formControlName]=\"field.EntityPropertyName\"\n                  [matAutocomplete]=\"auto\">\n               <mat-autocomplete #auto=\"matAutocomplete\">\n                  <mat-option *ngFor=\"let option of field.filter$ | async\"\n                     [value]=\"option\">\n                     {{option}}\n                  </mat-option>\n               </mat-autocomplete>\n            </mat-form-field>\n\n            <!-- lookup -->\n            <mat-form-field [floatLabel]=\"fieldStyle.floatLabel\" [appearance]=\"fieldStyle.appearance\" *ngSwitchCase=\"dtype.Lookup\">\n               <mat-label>{{field.Title}}</mat-label>\n               <mat-select [formControlName]=\"field.EntityPropertyName\">\n                  <mat-option *ngIf=\"!field.required\" value=\"N/A\">N/A</mat-option>\n                  <mat-option *ngFor=\"let opt of field.Choices\" \n                     [value]=\"opt[field.LookupList.value]\">{{opt[field.LookupList.key]}}\n                  </mat-option>\n               </mat-select>\n               <mat-hint>{{display(field.EntityPropertyName)}}</mat-hint>\n               <mat-error>{{display(field.EntityPropertyName)}}</mat-error>\n            </mat-form-field>\n            \n            <!-- boolean: yes/no -->\n            <mat-checkbox *ngSwitchCase=\"dtype.Boolean\" [formControlName]=\"field.EntityPropertyName\">{{field.Title}}\n            </mat-checkbox>\n\n            <!-- number || currency -->\n            <!-- <mat-form-field [appearance]=\"fieldStyle.appearance\" \n               *ngSwitchCase=\"field.FieldTypeKind == 9 || field.FieldTypeKind == 10 ? field.FieldTypeKind : -1\"> -->\n            <mat-form-field [floatLabel]=\"fieldStyle.floatLabel\" [appearance]=\"fieldStyle.appearance\" *ngSwitchCase=\"dtype.Number\">\n               <mat-label>{{field.Title}} {{form.value[field.EntityPropertyName] | number: '1.2-2'}}</mat-label>\n               <input matInput type=\"number\" [formControlName]=\"field.EntityPropertyName\">\n               <mat-error>{{display(field.EntityPropertyName)}}</mat-error>\n               <mat-hint>{{display(field.EntityPropertyName)}}</mat-hint>  \n            </mat-form-field>\n\n            <!-- user: text (single-line)\n            <mat-form-field [floatLabel]=\"fieldStyle.floatLabel\" [appearance]=\"fieldStyle.appearance\" *ngSwitchCase=\"dtype.User\">\n               <mat-label>{{field.Title}}</mat-label>\n               <input matInput type=\"text\" [formControlName]=\"field.EntityPropertyName\">\n            </mat-form-field> -->\n\n            <!-- textarea or anything else -->\n            <mat-form-field [floatLabel]=\"fieldStyle.floatLabel\" [appearance]=\"fieldStyle.appearance\" *ngSwitchDefault>\n               <mat-label>{{field.Title}}</mat-label>\n               <textarea matInput rows=\"3\" \n                  [value]=\"stringify(field.EntityPropertyName)\"\n                  (blur)=\"parse($event.target.value, field.EntityPropertyName)\">\n               </textarea>\n               <!-- <textarea matInput rows=\"3\" [formControlName]=\"field.EntityPropertyName\"\n                  (blur)=\"parse(field.EntityPropertyName)\"></textarea> -->\n            </mat-form-field>\n         </ng-container>\n      </div>\n   </div>\n</form>\n","import { Component, EventEmitter, OnInit, Input, Output } from '@angular/core';\nimport { JsonPipe } from '@angular/common';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { SpDataType } from './../../sp-utils';\nimport { ListItemService } from '../../list-item.service';\nimport { map, startWith } from 'rxjs/operators';\n\n@Component({\n  selector: 'lib-rx-form',\n  templateUrl: './rx-form.component.html'\n})\nexport class RxFormComponent implements OnInit {\n  @Input() item:any;\n  @Input() fieldStyle:any;\n  @Output() itemChange = new EventEmitter<any>();\n\n  fields:any[]; // 'item.fields' without the 'ID' field\n  dtype = SpDataType;\n  form:any;\n\n  constructor(private lis:ListItemService, private jsonPipe:JsonPipe) {}\n\n  ngOnInit(): void {\n    if (this.item.value && this.item.fields) {\n      /// remove 'readonly' fields\n      this.fields = this.item.fields\n        .filter((field:any) => !field.readonly && !field.ReadOnlyField);\n      \n      this.setupForm(this.fields);\n\n      this.form.valueChanges.subscribe(() => this.itemChange.emit(this.form));\n    }\n  }\n\n  setFilter(field:any, formCtrl:FormControl) {\n    field.filter$ = formCtrl.valueChanges.pipe(\n      startWith(''),\n      map((value:string) => {\n        return field.Choices.filter((option:string) => \n          option.toLowerCase().includes(value.toLowerCase()));\n      })\n    );\n  }\n\n  ///--- privates ---\n  ///\n  private setupForm(fields:any[]) {\n    let group = {}, ctrlVal:any;\n    for (let field of fields) { \n      ctrlVal = this.item.value[field.EntityPropertyName] || '';\n      group[field.EntityPropertyName] = new FormControl(\n        { value: ctrlVal, disabled: field.Disabled || field.ReadOnlyField },\n        field.required ? Validators.required : null\n      );\n\n      switch(field.FieldTypeKind) {\n        case SpDataType.Choice:\n          if (!field?.Choices?.length) {\n            this.lis.getFieldChoices(field.EntityPropertyName, field.List)\n            .subscribe((res:any) => {\n              field.Choices = res.Choices;\n              this.setFilter(field, group[field.EntityPropertyName]);\n            });\n          }\n          else {\n            this.setFilter(field, group[field.EntityPropertyName]);\n          }\n          break;\n        \n        case SpDataType.Lookup:\n          if (!field?.Choices?.length) {\n            this.lis.query(field.LookupList.query, field.LookupList)\n            .subscribe((items:any[]) => field.Choices = items);\n          }\n          break;\n      }\n    }\n\n    this.form = new FormGroup(group);\n    if (this.item.disabled) this.form.disable();\n    else if (this.item.updateOnBlur) this.form._updateOn = 'blur';\n\n    this.itemChange.emit(this.form);\n  }\n\n  filter:any = {};\n  filterChoices(field:any) {\n    let val = this.form.value[field.EntityPropertyName];\n    this.filter[field.EntityPropertyName] = field.Choices.filter((op:string) => {\n      op.toLowerCase().includes(val.toLowerCase());\n    });\n  }\n\n  /// \n  stringify(ctrlName:string) { \n    return this.jsonPipe.transform(this.form.value[ctrlName]); \n  }\n\n  ///\n  parse(value:any, name:string) {\n    try {\n      let o = {};\n      o[name] = JSON.parse(value);\n      this.form.patchValue(o);\n    }\n    catch(err) {\n      alert(`Failed to parse:\\n${value}\\n` + err);\n      console.error(`Failed to parse:\\n${value}\\n` + err);\n    }\n  }\n\n  display(name:string) {\n    if (name?.length && this.form.controls[name].errors) {\n      return Object.keys(this.form.controls[name].errors).toString();\n    }\n    return undefined;\n  }\n\n  updateValue(value:any) {\n    this.form.patchValue(value);\n  }\n}\n\n","\n<!-- <style>\nmat-form-field  {\n   width: 100%;\n   display: block;\n   margin-left: 4px;\n   margin-right: 4px;\n   padding: 4px;\n}\n</style> -->\n<ng-container [ngSwitch]=\"field.FieldTypeKind\">\n\n   <!-- number:integer -->\n   <mat-form-field appearance=\"fill\" *ngSwitchCase=\"dtype.Integer\">\n      <mat-label>{{field.Title || field.EntityPropertyName}}</mat-label>\n      <input matInput type=\"number\" \n         [(ngModel)]=\"model\" (change)=\"modelChange.emit(model)\"\n         (focus)=\"selectEvent.emit(field)\"\n         [required]=\"field.required\" [disabled]=\"field.Disabled\">\n   </mat-form-field>\n      \n   <!-- text (single) -->\n   <mat-form-field appearance=\"fill\" *ngSwitchCase=\"dtype.Text\">\n      <mat-label>{{field.Title || field.EntityPropertyName}}</mat-label>\n      <input matInput type=\"text\" [(ngModel)]=\"model\" (change)=\"modelChange.emit(model)\" (focus)=\"selectEvent.emit(field)\"\n         [required]=\"field.required\" [disabled]=\"field.Disabled\">\n   </mat-form-field>\n\n   <!-- text (multiple) -->\n   <mat-form-field appearance=\"fill\" *ngSwitchCase=\"dtype.Note\">\n      <mat-label>{{field.Title || field.EntityPropertyName}}</mat-label>\n      <textarea matInput rows=\"2\" [(ngModel)]=\"model\" (change)=\"modelChange.emit(model)\" (focus)=\"selectEvent.emit(field)\"\n         [required]=\"field.required\" [disabled]=\"field.Disabled\"></textarea>\n   </mat-form-field>\n\n   <!-- date -->\n   <mat-form-field appearance=\"fill\" *ngSwitchCase=\"dtype.DateTime\">\n      <mat-label>{{field.Title || field.EntityPropertyName}}</mat-label>\n      <input matInput [matDatepicker]=\"dp\" [(ngModel)]=\"model\" (change)=\"modelChange.emit(model)\" (focus)=\"selectEvent.emit(field)\"\n         [required]=\"field.required\" [disabled]=\"field.Disabled\">\n      <mat-datepicker-toggle matSuffix [for]=\"dp\"></mat-datepicker-toggle>\n      <mat-datepicker #dp></mat-datepicker>\n   </mat-form-field>\n\n   <!-- choice -->\n   <mat-form-field appearance=\"fill\" *ngSwitchCase=\"dtype.Choice\">\n      <mat-label>{{field.Title || field.EntityPropertyName}}</mat-label>\n      <mat-select [(ngModel)]=\"model\" (selectionChange)=\"modelChange.emit(model)\" (focus)=\"selectEvent.emit(field)\"\n         [required]=\"field.required\" [disabled]=\"field.Disabled\">\n         <mat-option *ngIf=\"!field.required\" [value]=\"undefined\">N/A</mat-option>\n         <mat-option *ngFor=\"let opt of field.Choices\" [value]=\"opt\">{{opt}}</mat-option>\n      </mat-select>\n   </mat-form-field>\n\n   <!-- lookup -->\n   <mat-form-field appearance=\"fill\" *ngSwitchCase=\"dtype.Lookup\">\n      <mat-label>{{field.Title || field.EntityPropertyName}}</mat-label>\n      <mat-select [(ngModel)]=\"model\" (change)=\"modelChange.emit(model)\" (focus)=\"selectEvent.emit(field)\"\n         [required]=\"field.required\" [disabled]=\"field.Disabled\">\n         <mat-option *ngIf=\"!field.required\" [value]=\"undefined\">N/A</mat-option>\n         <mat-option *ngFor=\"let opt of field.Choices\" [value]=\"opt[field.lookup.value] || opt\">\n            {{opt[field.lookup.key] || opt.Title}}\n         </mat-option>\n      </mat-select>\n   </mat-form-field>\n\n   <!-- boolean: yes/no -->\n   <mat-checkbox *ngSwitchCase=\"dtype.Boolean\" [(ngModel)]=\"model\" (change)=\"modelChange.emit(model)\" (focus)=\"selectEvent.emit(field)\"\n      [required]=\"field.required\" [disabled]=\"field.Disabled\">\n      {{field.Title || field.EntityPropertyName}}\n   </mat-checkbox>\n\n   <!-- number:decimal -->\n   <mat-form-field appearance=\"fill\" *ngSwitchCase=\"dtype.Number\">\n      <mat-label>{{field.Title || field.EntityPropertyName}}</mat-label>\n      <input matInput type=\"number\" [(ngModel)]=\"model\" (change)=\"modelChange.emit(model)\" (focus)=\"selectEvent.emit(field)\"\n         [required]=\"field.required\" [disabled]=\"field.Disabled\">\n      <mat-hint><b>{{model | number: '1.2-2'}}</b></mat-hint>\n   </mat-form-field>\n\n   <!-- user: text (single) -->\n   <mat-form-field appearance=\"fill\" *ngSwitchCase=\"dtype.User\">\n      <mat-label>{{field.Title || field.EntityPropertyName}}</mat-label>\n      <input matInput type=\"text\" [(ngModel)]=\"model.Title\" (change)=\"modelChange.emit(model)\" (focus)=\"selectEvent.emit(field)\"\n         [required]=\"field.required\" [disabled]=\"field.Disabled\">\n   </mat-form-field>\n\n   <!-- others: object...-->\n   <div *ngSwitchDefault class=\"col-content\">\n      <button mat-button [color]=\"idx == index ? 'accent': ''\" (click)=\"selectEvent.emit(field)\">\n         {{field.Title || field.EntityPropertyName}}: {{field.FieldTypeKind}}...\n      </button>\n   </div>\n</ng-container>","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { SpDataType } from './../../sp-utils';\n\n@Component({\n  selector: 'lib-field',\n  templateUrl: './field.component.html',\n  styleUrls: ['./../style.css']\n})\nexport class FieldComponent {\n  @Input() field: any;\n  @Output() fieldChange = new EventEmitter<any>();\n  @Input() model: any;\n  @Output() modelChange = new EventEmitter<any>();\n  @Output() selectEvent = new EventEmitter<any>();\n\n  dtype = SpDataType;\n  constructor() {}\n}\n","<style>\n.dim { opacity: .7 }\n.highlight { opacity: 1 }\n/* \n.col-content .mat-button {\n   overflow: hidden;\n   text-overflow: ellipsis;\n} */\n</style>\n<ng-container [ngSwitch]=\"objectType\">\n   <div *ngSwitchCase=\"'object'\" class=\"row\">\n      <div *ngFor=\"let field of fields; index as idx\" [class]=\"field.CssClass || 'col-4'\">\n         <lib-field [field]=\"fields[idx]\" [(model)]=\"object[field.EntityPropertyName]\"\n            (selectEvent)=\"onSelectField(idx)\"\n            (modelChange)=\"onChange($event, idx)\">\n         </lib-field>\n      </div>\n   </div>\n\n   <div *ngSwitchDefault class=\"row\">\n      <div [class]=\"fields[0].CssClass || 'col-4'\">\n         <lib-field [field]=\"fields[0]\" [(model)]=\"object\" (modelChange)=\"objectChange.emit(object)\"\n            (selectEvent)=\"onSelectField(0)\">\n         </lib-field>\n      </div>\n   </div>\n</ng-container>\n\n<div *ngIf=\"metadataEditing\">\n\n   <div *ngIf=\"-1 < index && edit.checked\">\n      <div class=\"row\" style=\"align-items: center;\">\n         <div class=\"col-2\">\n            <mat-form-field appearance=\"outline\">\n               <mat-label>Property Name/Key</mat-label>\n               <input matInput #propKey [(ngModel)]=\"field[index].EntityPropertyName\">\n            </mat-form-field>\n         </div>\n         <div class=\"col-2\">\n            <mat-form-field appearance=\"outline\">\n               <mat-label>Property Data-type</mat-label>\n               <mat-select [(ngModel)]=\"fields[index].FieldTypeKind\">\n                  <mat-option *ngFor=\"let opt of dtypes | keyvalue\" [value]=\"opt.value\">{{opt.key}}</mat-option>\n               </mat-select>\n            </mat-form-field>\n         </div>\n         <div class=\"col-2\">\n            <mat-form-field appearance=\"outline\">\n               <mat-label>Width</mat-label>\n               <input matInput [(ngModel)]=\"object[fields[index].CssClass]\">\n               <mat-hint>E.g. col-1,... col-12</mat-hint>\n            </mat-form-field>\n         </div>\n         <div class=\"col-6\">\n            <lib-field [field]=\"fields[index]\" [(model)]=\"object[field[index].EntityPropertyName]\"></lib-field>\n         </div>\n      </div>\n   </div>\n\n   <div class=\"row\" style=\"align-items: center;\">\n      <mat-checkbox #view>View</mat-checkbox>\n      <button mat-button color=\"accent\" (click)=\"stringify(); view.checked = true\">Stringify</button>\n      <button mat-button color=\"accent\" (click)=\"parse()\" [disabled]=\"!configText\">Parse</button>\n      <span class=\"spacer\"></span>\n      \n      <mat-checkbox #edit>Edit <span *ngIf=\"index>-1\">{{field[index].EntityPropertyName}}</span></mat-checkbox>\n      <button mat-button color=\"accent\" (click)=\"newProperty(); edit.value = true;\">Add</button>\n      <button mat-button color=\"accent\" (click)=\"deleteProperty(); edit.value = false;\" [disabled]=\"index<0\">Delete</button>\n   </div>\n\n   <div>\n      <mat-form-field *ngIf=\"view.checked\" appearance=\"fill\" style=\"width:100%;\">\n         <mat-label>config</mat-label>\n         <textarea matInput [(ngModel)]=\"configText\" rows=\"10\" style=\"white-space: pre-wrap;\"></textarea>\n      </mat-form-field>\n   </div>\n</div>","import { Component, EventEmitter, Inject, Input, OnChanges, Output } from '@angular/core';\nimport { JsonPipe} from '@angular/common';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SpDataType } from '../../sp-utils'\n\n@Component({\n  selector: 'lib-object-form',\n  templateUrl: './object-form.component.html',\n  styleUrls: ['./../style.css']\n})\nexport class ObjectFormComponent implements OnChanges {\n  @Input() object:any;\n  @Output() objectChange = new EventEmitter<any>();\n  @Input() fields:any[];\n  @Output() changeEvent = new EventEmitter<any>();\n  @Output() selectEvent = new EventEmitter<any>();\n  @Input() metadataEditing:boolean;\n\n  index:number = -1;\n  dtypes:any = SpDataType;\n\n  configText:string;\n  objectType:string;\n  property:any;\n\n  constructor(private jsonPipe:JsonPipe) {}\n\n  ngOnChanges(): void {\n    this.objectType = typeof(this.object);\n    if (this.objectType === 'object') {\n      this._generateFields(this.object);\n    }\n    else {\n      this.property = { key: this.object };\n      this._generateFields(this.property);\n    }\n  }\n\n  private _generateFields(obj:any) {\n    if (!this.fields?.length) {\n      this.fields = [];\n      for (let key in obj) {\n        this.fields.push({\n          EntityPropertyName: key,\n          FieldTypeKind: this._toSpType(typeof(obj[key]))\n        });\n      }\n    }\n  }\n\n  private _toSpType(type:string) {\n    switch(type) {\n      case 'boolean': return 8;\n      case 'string': return 2;\n      case 'number': return 9;\n      default: return -1;\n    }\n  }\n\n  selectIndex(idx:number) {\n    this.index = idx;\n  }\n\n  onChange(evt:any, fieldIdx:number) {\n    this.changeEvent.emit({\n      field: this.fields[fieldIdx].EntityPropertyName, \n      value: evt,\n      object: this.object\n    });\n  }\n\n  onSelectField(idx:number) {\n    this.selectEvent.emit({\n      key: this.fields[idx].EntityPropertyName,\n      value: this.object[this.fields[idx].EntityPropertyName]\n    });\n    this.index = idx;\n  }\n\n  deleteProperty(idx:number = this.index) {\n    let field:any = this.fields.splice(idx, 1);\n    \n    /// object as array\n    if (this.object.length) {\n      let idx = parseInt(field.EntityPropertyName);\n      if (!isNaN(idx)) this.object.splice(idx, 1);\n    }\n\n    /// object\n    else {\n      delete this.object[field.EntityPropertyName];\n    }\n\n    this.index = -1;\n  }\n\n  newProperty(inputRef?:any) {\n    this.fields.push({\n      EntityPropertyName: '', Title: '', FieldTypeKind: 2, cssClass: 'col-3', required: false  \n    });\n    \n    this.index = this.fields.length - 1;\n    this.object[this.fields[this.index].EntityPropertyName] = undefined;\n\n    if (inputRef) inputRef.focus();\n  }\n\n  ///\n  stringify() {\n    this.configText = this.jsonPipe.transform(this.object);\n  }\n\n  parse() {\n    try { \n      this.object = JSON.parse(this.configText);\n      this.ngOnChanges();\n      this.objectChange.emit(this.object);\n    }\n    catch(err) {\n      alert(`Parsing error ${err}`);\n      console.error('Parsing error:', err);\n    }\n  }\n}\n\n@Component({\n  selector: 'lib-form-dialog',\n  template: `\n    <h2 mat-dialog-title>Detail</h2>\n    <mat-dialog-content>\n      <lib-object-form [object]=\"data\"></lib-object-form>\n    </mat-dialog-content>\n    <mat-dialog-actions align=\"end\">\n      <button mat-button mat-dialog-close>Close</button>\n    </mat-dialog-actions>`\n})\nexport class FormDialogComponent {\n  constructor(\n    public dialogRef: MatDialogRef<FormDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data:any\n  ) {}\n\n  close() { this.dialogRef.close(); }\n}\n","\n<style>\n.row { align-items: center; }\n</style>\n\n<div class=\"row\">\n   <div [class]=\"field.CssClass\" *ngFor=\"let field of metalist.fields; index as idx\">\n      <div class=\"col-content\">\n         <button mat-flat-button [color]=\"idx == index ? 'accent' : ''\"\n            (click)=\"editField(idx)\">{{idx + ' - ' + field.Title}}            \n         </button>\n      </div>\n   </div>\n</div>\n<br>\n\n<div *ngIf=\"(index > -1) && metalist?.fields\">\n   <lib-object-form [(object)]=\"metalist.fields[index]\" [fields]=\"metafields\"\n      (selectEvent)=\"onFieldSelect($event)\"\n      (changeEvent)=\"onFieldChange($event)\">\n   </lib-object-form>\n\n   <div class=\"row\">\n      <div class=\"col-3\">\n         <mat-form-field appearance=\"fill\">\n            <mat-label>Label</mat-label>\n            <input matInput [(ngModel)]=\"fields[index].Title\" (change)=\"generateEntityPropertyName(fields[index])\">\n         </mat-form-field>\n      </div>\n\n      <div class=\"col-3\">\n         <mat-form-field appearance=\"fill\">\n            <mat-label>Name</mat-label>\n            <input matInput [(ngModel)]=\"fields[index].EntityPropertyName\">\n         </mat-form-field>\n      </div>\n\n      <div class=\"col-3\">\n         <mat-form-field appearance=\"fill\">\n            <mat-label>Type as string</mat-label>\n            <mat-select [(ngModel)]=\"fields[index].FieldTypeKind\"\n               (selectionChange)=\"checkDType(fields[index])\">\n               <mat-option *ngFor=\"let dt of dtypes | keyvalue\"\n                  [value]=\"dt.value\">{{dt.key}}\n               </mat-option>\n            </mat-select>\n         </mat-form-field>\n      </div>\n\n      <div class=\"col-3\">\n         <mat-form-field appearance=\"fill\">\n            <mat-label>CSS Class</mat-label>\n            <mat-select matInput [(value)]=\"fields[index].cssClass\">\n               <mat-option *ngFor=\"let col of cols\"\n                  [value]=\"col\">{{col}}\n               </mat-option>\n            </mat-select>\n         </mat-form-field>\n      </div>\n\n      <div class=\"col-2\">\n         <mat-form-field appearance=\"fill\">\n            <mat-label>Order</mat-label>\n            <input matInput type=\"number\" min=\"0\" [max]=\"fields.length - 1\" [value]=\"index\" #newIdx\n               (change)=\"arangeFields(index, newIdx.value)\">\n         </mat-form-field>\n      </div>\n\n      <div class=\"col-2\">\n         <mat-checkbox [(ngModel)]=\"fields[index].required\"\n            style=\"margin-left:0.25em\">Required</mat-checkbox>\n      </div>\n\n      <div class=\"col-2\">\n         <mat-checkbox [(ngModel)]=\"fields[index].ReadOnlyField\"\n            style=\"margin-left:0.25em\">Read-only</mat-checkbox>\n      </div>\n\n      <div class=\"col-2\">\n         <mat-checkbox [(ngModel)]=\"fields[index].changeToList\"\n            style=\"margin-left:0.25em\">Change to list</mat-checkbox>\n      </div>\n   </div>\n\n   <div class=\"row\" *ngIf=\"fields[index].FieldTypeKind == 6\">\n      <div class=\"col-12\">\n         <mat-form-field appearance=\"fill\">\n            <mat-label>Choice Options - separated by comma (,)</mat-label>\n            <input matInput #opt \n               [value]=\"stringify(fields[index].Choices)\" \n               (change)=\"fields[index].Choices = parseOptions(opt.value)\">\n         </mat-form-field>\n      </div>\n   </div>\n</div>\n\n<mat-action-row style=\"align-items: center;\">\n   <span>Config</span>\n   <button mat-flat-button (click)=\"newField()\">&#10133; New field</button>\n   <button *ngIf=\"index > -1\" mat-button (click)=\"spliceAt(index)\">&#10007; Remove</button>\n      \n   <span class=\"spacer\"></span>\n\n   <span>List</span>\n   <button mat-button color=\"warn\" (click)=\"deleteField()\">&#10007; Delete</button>\n   <button mat-button color=\"primary\" (click)=\"addFields()\">&#10133; Add</button>\n</mat-action-row>","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { from } from 'rxjs';\nimport { concatMap } from 'rxjs/operators';\nimport { ListFieldService } from '../../list-field.service';\n\n@Component({\n  selector: 'lib-list-fields',\n  templateUrl: './list-fields.component.html',\n  styleUrls: ['./../style.css']\n})\nexport class ListFieldsComponent {\n  @Input() metalist:any;\n  @Output() changeEvent = new EventEmitter<any>();\n    \n  metafields = [\n    /// 0 - Title: string\n    { \n      Title: 'Title',\n      EntityPropertyName: 'Title',\n      FieldTypeKind: 2,\n      Required: true,\n      Order: 1,\n      CssClass: 'col-3'\n    },\n\n    /// 1 - EntityPropertyName: string\n    { \n      Title: 'Entity Property Name',\n      EntityPropertyName: 'EntityPropertyName',\n      FieldTypeKind: 2,\n      ReadOnlyField: false,\n      Order: 2,\n      CssClass: 'col-3'\n    },\n\n    /// 2 - FieldTypeKind: choice\n    { \n      Title: 'Field Type Kind',\n      EntityPropertyName: 'FieldTypeKind',\n      FieldTypeKind: 6,\n      Required: true,\n      Order: 3,\n      CssClass: 'col-3',\n      Choices: this.range(1, 20, 1)\n    },\n\n    /// 3 - Order: number\n    { \n      Title: 'Order',\n      EntityPropertyName: 'Order',\n      FieldTypeKind: 9,\n      Order: 4,\n      CssClass: 'col-3',\n    },\n\n    /// 4 - CssClass: choice\n    { \n      Title: 'CSS Class',\n      EntityPropertyName: 'CssClass',\n      FieldTypeKind: 6,\n      Order: 5,\n      CssClass: 'col-3',\n      Choices: ['col-1', 'col-2', 'col-3', 'col-4', 'col-5', 'col-6', 'col-7', 'col-8', 'col-9', 'col-10', 'col-11', 'col-12']\n    },\n\n    /// 5 - Required: boolean\n    { \n      Title: 'Required',\n      EntityPropertyName: 'Required',\n      FieldTypeKind: 8,\n      Order: 6,\n      CssClass: 'col-3',\n    },\n\n    /// 6 - Disabled: boolean\n    { \n      Title: 'Disabled',\n      EntityPropertyName: 'Disabled',\n      FieldTypeKind: 8,\n      Order: 7,\n      CssClass: 'col-3',\n    },\n\n    /// 7 - Choices: note -> array\n    { \n      Title: 'Choices',\n      EntityPropertyName: 'Choices',\n      FieldTypeKind: 3,\n      Order: 8,\n      CssClass: 'col-6',\n      Disabled: false\n    },\n\n    /// 8 - LookupList: text -> array\n    { \n      Title: 'Lookup List GUID',\n      EntityPropertyName: 'LookupList',\n      FieldTypeKind: 2,\n      Order: 8,\n      CssClass: 'col-6',\n      Disabled: false\n    }\n  ];\n  selected:any = {};\n  index:number = -1;\n  editing:boolean[] = [];\n\n  constructor(private lfs:ListFieldService) {}\n\n  //---------------------------------------------------------\n  // PRIVATE\n  //---------------------------------------------------------\n\n  /// toggle 'disabled' meta-field 'Choices'\n  private _toggleDisabledField(field:any) {\n    /// Choices\n    this.metafields[7].Disabled = !(field.FieldTypeKind === 6);\n    /// Lookup\n    this.metafields[8].Disabled = !(field.FieldTypeKind === 7);\n  }\n\n  private _initMetafields(field:any, index?:number) {\n    /// 'Order'\n    field.Order = this.index;\n\n    /// 'Choices' or 'Lookup'\n    this._toggleDisabledField(field);\n  }\n\n  /// returns list info\n  private _listInfo() {\n    try {\n      return {\n        url: this.metalist.url.toLowerCase().split('/list')[0],\n        title: this.metalist.title,\n        guid: this.metalist.guid\n      };\n    }\n    catch(err) {\n      let msg = `Failed to setup the list.\\nList title: ${JSON.stringify(this.metalist)}.`\n      \n      alert(msg);\n      throw (msg);\n    }\n  }\n\n  //--------------------------------------------------------- \n  // PUBLIC\n  //---------------------------------------------------------\n\n  range(start:number, end:number, step = 1) {\n    let len = end - start + 1;\n    if (len) { \n      let a = new Array(len);\n      let idx = 0;\n      \n      a[idx++] = start;\n      for (; idx < len; idx++) \n        a[idx] = a[idx - 1] + step;\n      \n      return a;\n    }\n  }\n\n  onFieldSelect(field:any) {\n    console.log('field selected:', field);\n  }\n  \n  onFieldChange(evt:any) {\n    /// Title -> remove white-spaces in meta-field 'EntityPropertyName'\n    if (evt.field === 'Title') \n      evt.object.EntityPropertyName = evt.value.replace(/ /g, '');\n\n    /// FieldTypeKind -> toggle 'disabled' meta-field 'Choices'\n    else if (evt.field === 'FieldTypeKind')\n      this._toggleDisabledField(evt.object);\n\n    /// Order -> reoder fields\n    else if (evt.field === 'Order') this.orderFields(evt.object, evt.value);\n\n    /// Choices -> parse string to array\n    else if (evt.field === 'Choices') {\n      evt.object.Choices = evt.value.split(',');\n    }\n  }\n\n  /// edit field\n  editField(idx:number) {\n    this.index = idx;\n    this._initMetafields(this.metalist.fields[idx])\n  }\n\n  /// new field form\n  newField() {\n    this.metalist.fields.push({ \n      Order: this.metalist.fields.length,\n      toAdd: true\n    });\n\n    this.index = this.metalist.fields.length - 1;\n    this.editing[this.index] = true;\n\n    // this.fieldsChange.emit(this.metalist.fields);\n  }\n\n  /// add fields to list\n  /// emit change\n  addFields() {\n    let fieldsToAdd = this.metalist.fields.filter((f:any) => f.toAdd);\n\n    if (fieldsToAdd.length && this.metalist?.url) {\n      from(fieldsToAdd).pipe(\n        concatMap((field:any) => {\n          delete field['toAdd'];\n          return this.lfs.add(field, this._listInfo());\n        })\n      )\n      .subscribe((res:any) => {\n        console.log(`Field ${res.Title} was added successfully.`);\n        this.changeEvent.emit(this.metalist);\n      })\n    }\n  }\n\n  /// remove field from config\n  /// emit change\n  spliceAt(idx:number = this.index) {\n    this.metalist.fields.splice(idx, 1);\n    this.changeEvent.emit(this.metalist);\n  }\n\n  /// delete field from the list\n  /// emit change\n  deleteField() {\n    if (this.metalist.fields[this.index]) {\n      let field = this.metalist.fields[this.index];\n      if (confirm(`Are you sure you want to delete the \"${field.Title}\" field?`)) {\n        this.lfs.delete(field.Title, this._listInfo())\n        .subscribe((res:any) => {\n          this.spliceAt(this.index);\n        })\n      }\n    }\n  }\n\n  /// (re)order fields with new index/order\n  orderFields(field:any, index:number) {\n    /// 'index' out of range? if so, put it in range\n    if (index < 0)\n      field.Order = index = 0;\n    else if (index > this.metalist.fields.length - 1)\n      field.Order = index = this.metalist.fields.length - 1;\n\n    let oldIdx = this.metalist.fields.findIndex((f:any) => f.EntityPropertyName === field.EntityPropertyName);\n    let item = this.metalist.fields.splice(oldIdx, 1);\n\n    /// [0 - index] + item + [index - length]\n    this.metalist.fields = [...\n      this.metalist.fields.slice(0, index)\n      .concat(item, this.metalist.fields.slice(index))\n    ];\n\n    this.editing[index] = true;\n    this.index = index;\n\n    this.changeEvent.emit(this.metalist);\n  }\n\n  ///\n  swapFields(i:number, j:number) {\n    [this.metalist.fields[i], this.metalist.fields[j]] = [this.metalist.fields[j], this.metalist.fields[i]];\n    this.index = j;\n    \n    this.changeEvent.emit(this.metalist);\n  }\n\n  ///\n  arangeFields(oldIdx:number, newIdx:number) {\n    let item = this.metalist.fields.splice(oldIdx, 1);\n\n    /// [0 - newIdx] + item + [newIdex - length]\n    this.metalist.fields = [...\n      this.metalist.fields.slice(0, newIdx)\n      .concat(item, this.metalist.fields.slice(newIdx))\n    ];\n\n    this.editing[newIdx] = true;\n    this.index = newIdx;\n\n    this.changeEvent.emit(this.metalist);\n  }\n\n  checkDType(field:any) {\n    field.lookup = (field.FieldTypeKind === 7)\n      ? {} : undefined;\n  }\n\n  stringify(obj:any) {\n    return (obj?.length) ? obj.join() : JSON.stringify(obj);\n  }\n\n  parseOptions(opts:string) {\n    return opts.split(',').map(str => str.trim());\n  }\n\n  parseQuery(query:string) {\n    try { return JSON.parse(query); }\n    catch(err) {\n      alert('Parse error:\\n' + err);\n      return query;\n    }\n  }\n\n  // generatename(field:any) {\n  //   field.EntityPropertyName = field.Title.replace(/ /g, '');\n  // }\n\n}\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { BaseService } from '../../base.service';\nimport { ListComponent } from '../list/list.component';\nimport { removeByItemKey } from '../../common';\n\n@Component({\n  selector: 'lib-recycle-bin',\n  template: '<lib-list *ngIf=\"list.items?.length\" #libList [list]=\"list\" (selectEvent)=\"restore($event)\"></lib-list>'\n})\nexport class RecycleBinComponent implements OnInit {\n  @Input() url:string;\n  @ViewChild('libList') libList:ListComponent;\n\n  list:any = {};\n\n  constructor(private sp:BaseService) {}\n\n  ngOnInit(): void {    \n    this.sp.recycleBin(this.url).subscribe(res => {     \n      this.list.items = res;\n      this.list.fields = [\n        { Title: 'Title', EntityPropertyName: 'Title', FieldTypeKind: 2 },\n        { Title: 'Container', EntityPropertyName: 'DirName', FieldTypeKind: 2 },\n        { Title: 'Type', EntityPropertyName: 'ItemType', FieldTypeKind: 1 },\n        { Title: 'Deleted', EntityPropertyName: 'DeletedDate', FieldTypeKind: 4 },\n      ];\n      this.list.displays = ['Title', 'DirName', 'ItemType', 'DeletedDate'];\n    })\n  }\n\n  restore(ev:any) {\n    this.sp.restore(ev.payload.Id, this.url)\n    .subscribe(() => {\n      removeByItemKey(this.list.items, ev.payload, 'Id');\n      this.libList.updateRows(this.list.items);\n    });\n  }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n/**\n * @title Dialog with header, scrollable content and actions\n */\n@Component({\n  selector: 'general-dialog',\n  template: `\n  <h2 mat-dialog-title [class]=\"data.Cat + '-fg'\">{{data?.Title || data.Cat}}</h2>\n  <mat-dialog-content>\n    <pre *ngIf=\"data.Type == 'string'\">{{data.Detail}}</pre>\n    <pre *ngIf=\"data.Type != 'string'\">{{data.Detail|json}}</pre>\n  </mat-dialog-content>\n  <mat-dialog-actions align=\"end\">\n    <ng-container *ngIf=\"!data.Operations?.length\">\n      <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitialmat-dialog-close \n        [class]=\"data.Cat + '-bg'\">Got it!</button>\n    </ng-container>\n\n    <ng-container *ngIf=\"data.Operations?.length\">\n      <button mat-raised-button *ngFor=\"let op of data.Operations\"\n        [class]=\"op.class\"\n        [cdkFocusInitial]=\"op.focused\"\n        [mat-dialog-close]=\"{ action: op, data: data }\" cdkFocusInitial>{{op.name}}\n      </button>\n    </ng-container>\n  </mat-dialog-actions>`\n})\nexport class GeneralDialog {\n  constructor(@Inject(MAT_DIALOG_DATA) public data:any) {}\n}\n","/// modules\nimport { NgModule } from '@angular/core';\nimport { CommonModule, CurrencyPipe, PercentPipe, JsonPipe } from '@angular/common';\n// import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\nimport { MaterialModule } from './material/material.module';\n\n/// service\nimport { BaseService } from './base.service';\n\n/// pipe\nimport { NoSanitizePipe } from './comp/announcement/announcement.component';\n\n/// components\nimport { FileInputComponent } from './comp/file-input/file-input.component';\nimport { AnnouncementComponent } from './comp/announcement/announcement.component';\nimport { ListComponent } from './comp/list/list.component';\nimport { RxFormComponent } from './comp/rx-form/rx-form.component';\nimport { ListFieldsComponent } from './comp/list-fields/list-fields.component';\nimport { FieldComponent } from './comp/field/field.component';\nimport { ObjectFormComponent, FormDialogComponent } from './comp/object-form/object-form.component';\nimport { RecycleBinComponent } from './comp/recycle-bin/recycle-bin.component';\nimport { GeneralDialog } from './comp/dialogs/dialogs.component';\n\n@NgModule({\n  declarations: [\n    FileInputComponent, \n    AnnouncementComponent,\n    NoSanitizePipe,\n    ListComponent,\n    RxFormComponent, \n    ListFieldsComponent, FieldComponent,\n    ObjectFormComponent, FormDialogComponent, \n    RecycleBinComponent, \n    GeneralDialog\n  ],\n  imports: [\n    CommonModule,\n    // BrowserModule,\n    HttpClientModule, FormsModule, ReactiveFormsModule,\n    MaterialModule,\n  ],\n  exports: [\n    JsonPipe,\n    MaterialModule,\n    FileInputComponent,\n    AnnouncementComponent,\n    ListComponent,\n    RxFormComponent, \n    ListFieldsComponent, ObjectFormComponent,\n    RecycleBinComponent, \n    GeneralDialog\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: BaseService, multi: true },\n    CurrencyPipe, PercentPipe, JsonPipe\n  ]\n})\nexport class SpModule {}\n","/*\n * Public API Surface of sp\n */\n\n///\nexport * from './lib/common';\nexport * from './lib/sp-utils';\n\n/// services\nexport * from './lib/sp-app-init.service';\nexport * from './lib/base.service';\nexport * from './lib/list.service';\nexport * from './lib/list-item.service';\nexport * from './lib/list-field.service';\nexport * from './lib/sp-file.service';\n// export * from './lib/logger';\n\n/// modules\nexport * from './lib/material/material.module';\nexport * from './lib/sp.module';\n\n/// compoments\nexport * from './lib/comp/file-input/file-input.component';\nexport * from './lib/comp/announcement/announcement.component';\nexport * from './lib/comp/list/list.component';\nexport * from './lib/comp/rx-form/rx-form.component';\nexport * from './lib/comp/object-form/object-form.component';\nexport * from './lib/comp/list-fields/list-fields.component';\nexport * from './lib/comp/recycle-bin/recycle-bin.component';\nexport * from './lib/comp/dialogs/dialogs.component';\n\n\n","import { Component, Input, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ContextService } from '../context.service';\nimport { EditDialog } from './item/edit';\nimport { removeByKeyValue, replaceOrAdd } from 'sp';\nimport { Operator } from './item/item';\n\n@Component({\n  selector: 'app-list-view',\n  template: '<lib-list #libList [list]=\"list\" [cssClass]=\"cssClass\" (selectEvent)=\"detail($event)\"></lib-list>'\n})\nexport class ListViewComponent {\n  @Input() list:any;\n  @ViewChild('libList') listComp:any;\n  \n  constructor(private sp:ContextService, private router:Router, private dialog:MatDialog) { }\n \n  detail(row:any) {\n    /// open dialog\n    if (row.action != 'double-click') {\n      let copy = Object.assign({}, row.payload);\n      let editing:any;\n      this.sp.current.item$.subscribe(item => editing = item);\n\n      const dialogRef = this.dialog.open(EditDialog, { \n        data: {\n          value: copy,\n          fields: this.list.fields\n        },\n        minWidth: '80vw'\n      });\n\n      dialogRef.afterClosed().subscribe((res:any) => {\n        /// chang page title\n        this.sp.docTitle('List View');\n        console.log('after closed:', res);  /// test\n        if (res) {\n          /// 'recycle'\n          if (res?.action === Operator.Recycle) {\n            removeByKeyValue(this.list.items, 'ID', res.item.ID);\n            this.listComp.updateRows(this.list.items);\n            // this.sp.current.item$.unsubscribe();\n          }\n\n          /// 'update'...\n          else {\n            if (editing) {\n              replaceOrAdd(this.list.items, editing, 'ID');\n              this.listComp.updateRows(this.list.items);\n            }\n          }\n        }\n      });\n    }\n\n    /// navigate to edit component\n    else this.router.navigate([`list/${row.payload.ID}`]);\n  }\n\n  cssClass = this.sp.cssClass;\n}\n","import { Component, Inject, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ContextService } from '../../context.service';\nimport { Operator } from './item';\n\n@Component({\n  selector: 'edit-item',\n  template: `\n    <list-item *ngIf=\"item\"\n      [item]=\"item\" [operations]=\"operations\" [dialogRef]=\"dialogRef\">\n      <detail-title>Request {{item.value.ID}}</detail-title>\n      <!--\n      <title-text>{{express-goes-here}}</title-text>\n      <desc-text *ngIf=\"and-here\">{{and-here}}</desc-text>\n      -->\n    </list-item>`\n})\nexport class EditComponent implements OnInit {\n  @Input() dialogRef:any; \n  @Input() data:any;\n\n  item:any; files:any = {};\n  operations:any = {};\n\n  constructor(private route:ActivatedRoute, private ctx:ContextService) {\n    this.ctx.current.busy$.next(true);\n  }\n\n  ngOnInit() {\n    /// edit in dialog\n    let id:number;\n    if (this?.data?.value) {\n      id = this.data.value.ID;\n      this.set(this.data.value);\n    }\n\n    else {\n      id = this.route.snapshot.params.id;\n      if (id) {\n        this.ctx.data.get(id).subscribe(res => this.set(res));\n      }\n    }\n  }\n  \n  ///---\n  \n  private set(value:any) {\n    this.item = {\n      value: value,\n      fields: this.ctx.metadata.fields,\n      updateOnBlur: true\n    };\n\n    if (this.item.value.Stage === this.ctx.ENUM.Stage.End)\n      this.operations = undefined\n    else {\n      this.operations[Operator.Update] = { caption: 'Submit', color: 'primary', disabled: false, excepted: value.Stage !== this.ctx.ENUM.Stage.Start };\n\n      /// user is authorized\n      if (this.ctx.user.authorized)\n        this.operations[Operator.Recycle] = { caption: 'Delete', color: 'warn', excepted: true };\n    };\n  }\n}\n\n/**\n * Edit in dialog\n */\n@Component({\n  selector: 'edit-item-dialog',\n  template: '<edit-item *ngIf=\"data?.value\" [data]=\"data\" [dialogRef]=\"dialogRef\"></edit-item>'\n})\nexport class EditDialog {\n  constructor(\n    public dialogRef: MatDialogRef<EditDialog>,\n    @Inject(MAT_DIALOG_DATA) public data:any\n  ) {}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { COMMA, ENTER, SEMICOLON, SPACE } from '@angular/cdk/keycodes'\nimport { ContextService } from '../../context.service';\nimport { ListItemService } from 'sp';\n\n@Component({\n  selector: 'app-email',\n  templateUrl: './email.component.html'\n})\nexport class EmailComponent implements OnInit {\n  department:any;\n  metafield:any;\n  routes:any;\n  stage:any;      // approval route\n  members:any[];  // members of approval route\n\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA, SEMICOLON, SPACE];\n\n  constructor(private ctx:ContextService, private lis:ListItemService) {}\n\n  ngOnInit(): void {\n    this.ctx.current.page$.next('Email');\n\n    this.metafield = this.ctx.metadata.fields\n      .find((field:any) => field.EntityPropertyName === 'DepartmentId');\n\n    if (!this.metafield) {\n      this.ctx.alert(\n        'Failed to find the config metafield \"DepartmentId\".',\n        'error'\n      );\n    }\n\n    if (!this.metafield?.Choices?.length) {\n      this.lis.set(this.metafield.LookupList);\n      this.lis.get()\n      .subscribe(res => this.metafield.Choices = res);\n    }\n\n    // approval routes\n    this.routes = this.ctx.ENUM.Stage;\n  }\n\n  ///\n  getMembers() {\n    if (this.department && this.stage) {\n      this.members = this.department[this.stage.key];\n    }\n  }\n\n  eMessage:any = {};\n\n  setEmailAddresses() {\n    if (this.department && this.stage) {\n      let members = this.ctx.getApprovalMembers({ DepartmentId: this.department.Id, Stage: this.stage.value });\n      this.eMessage.To = this.ctx.mapToEmailAddresses(members);\n    }\n  }\n\n  popout(user:any) {\n    this.ctx.alert(user, 'Contact Email', 'info');\n  }\n\n  add(event: any): void {\n    const input = event.input;\n    const value = event.value.trim();\n\n    console.log('event:', event);\n    // Add our fruit\n    if (value) {\n      this.eMessage.To.push(value);\n    }\n\n    // Reset the input value\n    if (input) {\n      input.value = '';\n    }\n  }\n\n  remove(email:string): void {\n    const index = this.eMessage.To.indexOf(email);\n\n    if (index > -1) {\n      this.eMessage.To.splice(index, 1);\n    }\n  }\n\n  email() {\n    this.ctx.email(this.eMessage)\n    .subscribe((emailData:any) => this.ctx.alert(\n      emailData, 'Email Info', 'info'\n    ));\n  }\n\n}\n","\n<div class=\"row\">\n   <div class=\"col-4\">\n      <mat-form-field appearance=\"outline\">\n         <mat-label>Select a department</mat-label>\n         <mat-select [(ngModel)]=\"department\"\n            (selectionChange)=\"setEmailAddresses()\">\n            <mat-option *ngFor=\"let dept of metafield.Choices\"\n               [value]=\"dept\">{{dept.Title}}\n            </mat-option>\n         </mat-select>\n      </mat-form-field>\n   </div>\n   \n   <div class=\"col-4\">\n      <mat-form-field appearance=\"outline\">\n         <mat-label>Select approval staff</mat-label>\n         <mat-select [(ngModel)]=\"stage\"\n            (selectionChange)=\"setEmailAddresses()\">\n            <mat-option *ngFor=\"let route of routes | keyvalue\"\n               [value]=\"route\">{{route.value}}\n            </mat-option>\n         </mat-select>\n      </mat-form-field>\n   </div>\n\n   <div class=\"col-12\">\n      <mat-form-field *ngIf=\"eMessage.To\" appearance=\"outline\">\n         <mat-label>To</mat-label>\n         <mat-chip-list #chipList aria-label=\"Emails\">\n            <mat-chip *ngFor=\"let email of eMessage.To\" \n               [selectable]=\"selectable\"\n               (click)=\"popout(email)\"\n               (removed)=\"remove(email)\">\n               {{email}}\n               <mat-icon matChipRemove>cancel</mat-icon>\n            </mat-chip>\n            <input placeholder=\"New email...\" [matChipInputFor]=\"chipList\"\n               [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\" [matChipInputAddOnBlur]=\"addOnBlur\"\n               (matChipInputTokenEnd)=\"add($event)\">\n         </mat-chip-list>\n      </mat-form-field>\n   </div>\n\n   <div class=\"col-12\">\n      <mat-form-field appearance=\"outline\">\n         <mat-label>Subject</mat-label>\n         <input matInput [(ngModel)]=\"eMessage.Subject\">\n      </mat-form-field>\n   </div>\n\n   <div class=\"col-12\">\n      <mat-form-field appearance=\"outline\">\n         <mat-label>Body</mat-label>\n         <textarea matInput rows=\"3\" [(ngModel)]=\"eMessage.Body\"></textarea>\n      </mat-form-field>\n   </div>\n</div>\n\n<mat-action-row>\n   <button mat-raised-button color=\"primary\" (click)=\"email()\">Send</button>\n</mat-action-row>\n\n<hr>\n<h3>eMessage</h3>\n<pre>{{eMessage|json}}</pre>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport {STEPPER_GLOBAL_OPTIONS} from '@angular/cdk/stepper';\nimport { ContextService } from '../../context.service';\n\n@Component({\n  selector: 'app-approval-steps',\n  templateUrl: './approval-steps.component.html',\n  providers: [{\n    provide: STEPPER_GLOBAL_OPTIONS, useValue: {displayDefaultIndicatorType: false}\n  }]\n})\nexport class ApprovalStepsComponent implements OnInit {\n  @Input() approvers: any[];\n  @Output() approversChange = new EventEmitter<any>();\n\n  @Input() currentRoute: string; // approvers[idx].title\n  @Input() showDetail: any;\n\n  enum: any;\n  selected:any = {};\n  operators:any = [];\n\n  constructor(private ctx: ContextService) {\n    this.enum = {\n      ApprovalOption: this.ctx.ENUM.ApprovalOption,\n      ApprovalTitle: this.ctx.ENUM.ApprovalTitle,\n      Stage: this.ctx.ENUM.Stage\n    }\n  }\n\n  ngOnInit(): void {\n    this.selected.index = this.approvers\n      .findIndex((approver:any) => approver.title === this.currentRoute)\n      || 0;\n  }\n\n  onStepChange(ev:any) {\n    this.selected.index = ev.selectedIndex;\n  }\n\n  insert(index?: number) {\n    this.approvers = this.approvers || [];\n\n    /// already existed\n    if (this.approvers.find((a: any) => a.Title === this.approvers[this.selected.index].title)) {\n      let cfm = confirm(`The approver ${this.approvers[this.selected.index].title} is already existed.\\nDo you still want to add this approver?`);\n      if (!cfm) return;\n    }\n\n    if (index <= 0) {\n      this.approvers.unshift(this.approvers[this.selected.index]);\n      this.selected.index = 0;\n    }\n    else if (isNaN(index) || index > this.approvers.length) {\n      this.approvers.push(this.approvers[this.selected.index]);\n      this.selected.index = this.approvers.length - 1;\n    }\n    else {\n      /// insert at index\n      this.approvers = this.approvers.slice(0, index)\n        .concat([this.approvers[this.selected.index]])\n        .concat(this.approvers.slice(index));\n      this.selected.index = index;\n    }\n\n    this.approversChange.emit(this.approvers);\n    this.selected.index = -1;\n  }\n\n  spliceAt(index: number, item?:any) {\n    this.ctx.confirm(\n      `Are you sure that you'd to remove ${this.approvers[index]?.title}?`,\n      'Confirm removing...',\n      'warn'\n    )\n    .subscribe((resp:any) => {\n      if (resp.action.value) {\n        this.approvers.splice(index, 1);\n        this.approversChange.emit(this.approvers);\n        this.selected.index = this.selected.index === 0\n          ? ++this.selected.index\n          : --this.selected.index;\n      }\n    });\n  }\n\n  swap(i: number, j: number) {\n    if (-1 < j && j < this.approvers.length) {\n      // [this.approvers[i], this.approvers[j]] = [this.approvers[j], this.approvers[i]];\n      \n      let tmp:any = Object.assign({}, this.approvers[i]);\n      Object.assign(this.approvers[i], this.approvers[j]);\n      Object.assign(this.approvers[j], tmp);\n\n      this.approversChange.emit(this.approvers);\n      this.selected.index = j;\n    }\n  }\n\n  upFrom(index: number) {\n    if (index > 0) {\n      this.swap(index, index - 1);\n    }\n  }\n\n  downFrom(index: number) {\n    if (index < this.approvers.length - 1) {\n      this.swap(index, index + 1);\n    }\n  }\n\n  onAdd() {\n    this.approvers.push({title: '', members: []});\n    \n    setTimeout(() => {\n      this.selected.index = this.approvers.length - 1;\n      this.operators[this.selected.index] = 'add';\n    }, 0);\n  }\n\n  onEdit(idx:number) {\n    this.operators[idx] = 'edit';\n  }\n\n  onCommit(ev:any, idx = this.selected.index) {\n    if(ev.committed) {\n      if (ev.operator === 'add') {\n        this.approvers[idx] = ev.data;\n      }\n      else if (ev.operator === 'delete') {\n        this.spliceAt(idx);\n      }\n      else if (ev.operator === 'edit') {\n        // already handled by 2-way binding\n      }\n      else {\n        this.ctx.alert(ev, 'Unable to handle UNKNOWN operator.', 'warn');\n      }\n    }\n\n    else {\n      if (ev.operator === 'add') this.approvers.pop();\n    }\n\n    this.operators[idx] = undefined;\n  }\n\n  /// mat-step color\n  stepColor(approver:any) {\n    if (approver?.concurred)\n      return 'primary';\n    if (approver?.concurred === false)\n      return 'warn'\n    // if (approver?.title === this.currentStage)\n      return 'accent'\n    // return '';\n  }\n\n}\n\n","\n<div style=\"display: flex; margin-bottom: 12px; align-items: center;\">\n   <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Edit Approval Chain\">\n      <mat-icon>more_vert</mat-icon>\n   </button>\n   <mat-menu #menu=\"matMenu\">\n      <button mat-menu-item (click)=\"onAdd()\">\n         <mat-icon>add</mat-icon>\n         <span>Add approver</span>\n      </button>\n      <button mat-menu-item (click)=\"onEdit(selected.index)\">\n         <mat-icon>edit</mat-icon>\n         <span>Edit approver</span>\n      </button>\n      <button mat-menu-item [disabled]=\"selected.index == 0\"\n         (click)=\"upFrom(selected.index)\">\n         <mat-icon>left</mat-icon>\n         <span>Move up (to the left)</span>\n      </button>\n      <button mat-menu-item [disabled]=\"selected.index == approvers.length - 1\"\n         (click)=\"downFrom(selected.index)\">\n         <mat-icon>right</mat-icon>\n         <span>Move down (to the right)</span>\n      </button>\n      <button mat-menu-item (click)=\"spliceAt(selected.index)\">\n         <mat-icon>&#10007;</mat-icon>\n         <span>Remove</span>\n      </button>\n   </mat-menu>\n\n   <span class=\"spacer\"></span>\n   selected: {{approvers[selected.index]?.title}}\n</div>\n\n<mat-horizontal-stepper #stepper labelPosition=\"bottom\"\n   [selectedIndex]=\"selected.index\"\n   (selectionChange)=\"onStepChange($event)\">\n   <mat-step *ngFor=\"let staff of approvers; index as idx\"\n      [label]=\"staff.title\"\n      [color]=\"stepColor(staff)\"\n      [completed]=\"staff.concurred\">\n\n      <app-approver [staff]=\"staff\"\n         [operator]=\"operators[idx]\"\n         (execute)=\"onCommit($event, idx)\">\n      </app-approver>\n      <br>\n      <app-approval-action *ngIf=\"showDetail\"\n         [disabled]=\"staff.title != currentRoute\"\n         [(approver)]=\"approvers[idx]\"\n         [approvers]=\"approvers\">\n      </app-approval-action>\n\n      <!-- <div><button mat-button matStepperNext>Next</button></div> -->\n   </mat-step>\n</mat-horizontal-stepper>","\n<div class=\"row\">\n   <div class=\"col-3\">\n      <mat-form-field appearance=\"outline\" color=\"accent\">\n         <mat-label>Route to</mat-label>\n         <mat-select [(ngModel)]=\"selected.routing\">\n            <mat-option *ngFor=\"let route of routes; last as last\"\n               [disabled]=\"last\"\n               [value]=\"route\">{{route}}\n            </mat-option>\n         </mat-select>\n      </mat-form-field>\n   </div>\n\n   <div class=\"col-9\">\n      <mat-form-field appearance=\"outline\" color=\"accent\">\n         <mat-label>Comment</mat-label>\n         <textarea matInput [(ngModel)]=\"selected.comment\" rows=\"3\"></textarea>\n      </mat-form-field>\n   </div>\n</div>","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-approval-route',\n  templateUrl: './approval-route.component.html'\n})\nexport class ApprovalRouteComponent {\n  @Input() routes:any[];\n  @Input() selected:any\n\n  constructor() {}\n}\n","import { Component, OnInit, Input, ViewChild, AfterViewInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ContextService } from './../../context.service';\nimport { SpFileService, removeByItemKey, removeByKeyValue, replaceOrAdd, Error$,\n  findObjectKeyByValue } from 'sp';\n\nexport enum Operator {\n  Add ='add',\n  Update = 'update',\n  Recycle = 'recycle',\n  Attach = 'attach',\n  Detach = 'detach'\n};\n\n@Component({\n  selector: 'list-item',\n  templateUrl: './item.html'\n})\nexport class ItemComponent implements OnInit, AfterViewInit {\n  @ViewChild('request') request:any;\n  @ViewChild('process') process:any;\n  @Input() item:any;\n  @Input() operations:any;  /// add, edit,...\n  @Input() dialogRef:any;   /// ref to item dialog\n\n  user:any;\n  \n  approvers:any;\n  approvalRoutes:string[];\n  nextRoute:any = {};\n\n  enum:any;           /// mapping\n\n  /// inputs for 'attachment' component\n  files:any;          /// attachments\n  templates$:any;     /// attachment templates\n\n  ///---\n  constructor(private ctx:ContextService, private File:SpFileService, private router:Router) {}\n\n  ///\n  ngOnInit(): void {\n    this.user = this.ctx.user;\n    this.preinit();\n\n    /// get support docs\n    this.templates$ = this.File.get(this.ctx.config.supportFileLocation);\n\n    this.ctx.current.page$.next(\n      this.item?.value?.ID ? `Request ${this.item.value.ID}` : 'New Request');\n\n    let routes = this.approvers.map((a:any) => a.title);\n    this.approvalRoutes = [this.enum.Stage.Start].concat(routes, this.enum.Stage.End);\n  }\n\n  ngAfterViewInit() {\n    let column = 'DepartmentId', sub:any;\n    this.request.form.controls[column].valueChanges.subscribe((changes:any) => {\n      if (!this.item.value.ID) {\n        this.approvers = this.ctx.getApprovers(column, changes);\n      }\n      else if (this.item.value.ID) {\n        this.ctx.confirm(\n          'Department has been changed.\\n\\nWould you like to change and reset the Approal Route as well?',\n          'Confirm: Change and Reset Approval Route?',\n          'warn'\n        )\n        .subscribe((res:any) => {\n          /// res { action: { name, value }, data: any}\n          if (res.action.value) {\n            this.approvers = this.ctx.getApprovers(column, changes);\n            if (this.item.value.ID) this.appendComment('Approval route was reset.');\n            this.item.value.Stage = this.enum.Stage.Start;\n          }\n        });\n      }\n    });\n\n    this.request.form.valueChanges.subscribe(status => {\n      this.disableOperations(this.operations, this.request.form.invalid);\n\n      if (this.request.form.valid) Object.assign(this.item.value, this.request.form.value);\n    });\n  }\n\n  get Admin() { return this.ctx.user.roles['App Admins']; }\n\n  disableOperations(operations:any, disabled:boolean) {\n    for (let btn in operations) {\n      if (!operations[btn].excepted) operations[btn].disabled = disabled;\n    }\n  }\n\n  ///\n  onSubmit(op:Operator) {\n    if (op === Operator.Recycle) {\n      this.ctx.confirm(\n        `Are you sure you want to delete item ID \"${this.item.value.ID}\"?`,\n        'Confirm deleting...',\n        'warn'\n      )\n      .subscribe((res:any) => {\n        if (res.action.value) this.exec(op);\n      });\n    }\n\n    else if (!this.item.value.ID && !this.files.attaching?.length) {\n      this.ctx.confirm(\n        'Would you still like to submit?',\n        'Forgot to attach support documents?',\n        'warn'\n      )\n      .subscribe((res:any) => {\n        if (res.action.value) {\n          this.preupdate(op);\n          this.exec(op);\n        }\n      });\n    }\n\n    else {\n      this.preupdate(op);\n      this.ctx.alert(\n        this.item.value,\n        'Submitting item',\n        'info'\n      );\n      this.exec(op);\n    }\n  }\n\n  /// data operations\n  exec(operator:Operator, value=this.item.value, attachments=this.files.attaching) {\n    this.disableOperations(this.operations, true);\n    let response:any;\n\n    (operator === Operator.Recycle\n      ? this.ctx.data[operator](value)\n      : this.ctx.data[operator](value, attachments))\n    .subscribe(\n      /// next\n      (res:any) => {\n        response = res;\n        this.onExecNext[operator](value, res);\n      },\n\n      /// error\n      (err:any) => Error$.next({\n        'message': `Failed to perform ${operator}.`,\n        'caught-in': 'item::exec',\n        'detail': err\n      }),\n\n      /// complete\n      () => {\n        this.onExecComplete[operator](value, response);\n\n        /// close dialog or redirect\n        (!!this.dialogRef)\n          ? (!!value)\n            ? this.dialogRef.close({item: value, action: operator})\n            : this.dialogRef.close()\n          : this.router.navigate(['list']);\n      }\n    );\n  }\n\n  attach(files:any[]) {\n    if (this.item.value.ID) {\n      let attachments = []; /// for logging;\n\n      this.ctx.data.attach(this.item.value.ID, files)\n      .subscribe(\n        (res:any) => {\n          attachments.push(res);\n          removeByKeyValue(this.files.attaching, 'renamed', res.FileName);\n          replaceOrAdd(this.files.attached, res, 'FileName');\n        },\n\n        err => Error$.next({\n          'message': 'Failed to perform Attaching files.',\n          'caught-in': 'item::attach',\n          'detail': err\n        }),\n\n        () => {\n          /// stage == 'Cert Submission' => 'Concurred' = true\n          if (this.item.value.Stage === this.enum.Stage.CS) {\n            let author = this.approvers.find((approver:any) => approver.title === this.item.value.Stage);\n            if (author && this.process?.onConcurred) {\n              this.process.onConcurred(author, true, 'Have submitted cert');\n            }\n          }\n\n          /// log\n          if (this.ctx.logger) {\n            let files = attachments.map((atta:any) => atta.FileName).join(', ');\n            const msg = this.ctx.logHeader(`(Re)Attached ${files}.`)\n            this.ctx.logger.append(msg, this.item.value.ID);\n          }\n        }\n      );\n    }\n  }\n\n  /// detach file from attachments\n  detach(file:any) {\n    this.ctx.confirm(\n      `Are you sure you want to delete attachment \"${file.FileName}\"?`,\n      'Confirm deleting...',\n      'warn'\n    )\n    .subscribe((res:any) => {\n      if (res.action.value) {\n        this.ctx.data.detach(this.item.value.ID, file.FileName).subscribe(() => {\n          removeByItemKey(this.files.attached, file, 'FileName');\n\n          /// log\n          if (this.ctx.logger) {\n            this.ctx.logger.append(\n              this.ctx.logHeader(`Detached \"${file.FileName}\".`), this.item.value.ID, 'warn');\n          }\n        });\n      }\n    });\n  }\n\n  cssClass = this.ctx.cssClass;\n\n  ///--- test ---\n  view:any = {};\n\n  ///--- PRIVATE ---\n\n  private stringToObject(approval:string) {\n    if (approval?.length > 0) {\n      try {\n        return this.parse(approval);\n      }\n      catch(err) {\n        this.ctx.alert(\n          'Failed to parse approval.\\nError occurred in \"<item::stringToObject>',\n          'Failed to parse approval string.',\n          'warn'\n        );\n      }\n    }\n    else {\n      return [];\n    }\n  }\n\n  private preinit() {\n    this.files = {\n      attached: [],\n      attaching: []\n    };\n\n    if (this.item.value?.AttachmentFiles) {\n      this.files.attached = this.item.value.AttachmentFiles;\n    }\n\n    this.approvers = this.stringToObject(this.item.value?.Approvers);\n    this.enum = {\n      ApprovalOption: this.ctx.ENUM.ApprovalOption,\n      ApprovalTitle: this.ctx.ENUM.ApprovalTitle,\n      Stage: this.ctx.ENUM.Stage\n    };\n  }\n\n  /// parse string\n  private parse(str:string) {\n    try {\n      return JSON.parse(str);\n    }\n    catch(err) {\n      this.ctx.alert(err, `Failed to parse ${str}.`, 'Warn');\n      return;\n    }\n  }\n\n  ///\n  private appendComment(comment:string, stage=this.item.value.Stage, field='ActionRequired') {\n    let cmt = this.ctx.logHeader(comment, stage);\n    this.item.value[field] = (this.item.value[field])\n      ? `${this.item.value[field]}\\n\\n---\\n${cmt}`\n      : cmt;\n  }\n\n  private preupdate(operator:Operator, value=this.item.value, attachments=this.files.attaching) {\n    let processor = (this.nextRoute?.routing)\n      ? this.nextRoute\n      : this.approvers.find((approver:any) => approver.title === value.Stage);\n\n    /// append comment\n    const filenames = attachments\n      ? (attachments.map((file:any) => file.Name)).join(', ')\n      : 'None';\n\n    const comment = `Action: ${operator}, Concurred: ${processor?.concurred}, Attached: ${filenames}\n    \\n${processor?.comment || ''}`;\n    this.appendComment(comment);\n\n    /// update the route/stage\n    value.PreviousStage = value.Stage;\n    value.Stage = (processor?.routing)\n      ? processor.routing\n      : (!value.ID)\n        ? this.approvers[0].title /// new request\n        : value.Stage   /// no change in stage\n    value.Approvers = JSON.stringify(this.approvers);\n  }\n  \n  /// on exec next\n  private onExecNext = {\n    attach: (data:any, response:any) => {},\n    detach: (data:any, response:any) => {},\n    add: (data:any, response:any) => {},\n    update: (data:any, response:any) => {},\n    recycle: (data:any, response:any) => {}\n  }\n\n  /// on exec error\n  private onError(err:any, msg?:string, caughtin?:string) {\n    Error$.next({\n      'message': msg,\n      'caught-in': caughtin,\n      'detail': err\n    })\n  }\n\n  /// on exec complete\n  private onExecComplete = {\n    /// submitted 'data' and 'response' execution\n\n    add: (data:any, response:any) => {\n      this.ctx.notify(`The request has been submitted successfully.`, 'OK', 1000);\n\n      /// email confirmation & 1st approver\n      this.ctx.emailTo(response, 'Confirmation').subscribe();\n      this.ctx.emailTo(response).subscribe();\n\n      /// log\n      if (this.ctx.logger) {\n        this.ctx.logger.append(\n          this.ctx.logHeader('Submitted new request.'), response.ID);\n      }\n    },\n\n    update: (data:any, response?:any) => {\n      /// 'response' update, response is 'null'\n      this.ctx.notify(`The request has been submitted successfully.`, 'OK', 1000);\n\n      this.ctx.data.get(data.ID)\n      .subscribe(item => {\n        this.ctx.current.item$.next(item);\n        if (item.Stage !== item.PreviousStage) {\n          this.ctx.emailTo(item).subscribe();\n        }\n      });\n\n      /// log\n      if (this.ctx.logger) {\n        const msg = this.ctx.logHeader('Updated.');\n        this.ctx.logger.append(msg, data.ID);\n      }\n    },\n\n    recycle: (data:any, response?:any) => {\n      /// 'response' recycle, response is GUID\n      if (!!response) {\n        this.ctx.notify(`The request has been deleted/recycled.`, 'OK', 1000);\n\n        if (this.ctx.logger) {\n          const msg = this.ctx.logHeader('Deleted.');\n          this.ctx.logger.append(msg, data.ID, 'warn');\n        }\n      }\n    },\n\n    attach: () => {\n      this.ctx.notify(`The files has been submitted attached successfully.`, 'OK', 1000);\n    },\n\n    detatch: () => {}\n\n  }\n\n\n  /// test\n  members:any[];\n\n  /// Get Members with Dept ID\n  getMembers(stage=this.nextRoute.routing) {\n    this.members = this.ctx.getApprovalMembers(this.item.value, stage);\n  }\n\n  email() {\n    this.ctx.emailTo(this.item.value, this.nextRoute.routing)\n    .subscribe((emailData:any) => this.ctx.alert(\n      emailData, 'Email Info', 'info'\n    ));\n  }\n}\n","\n<div *ngIf=\"dialogRef\" class=\"mat-dialog-title\">\n   <h2><ng-content select=\"detail-title\"></ng-content></h2>\n</div>\n\n<div [class.mat-dialog-content]=\"dialogRef\">   \n   <mat-accordion class=\"detail\" multi>\n      <!--- request form --->\n      <mat-expansion-panel expanded=\"true\">\n         <mat-expansion-panel-header>\n            <mat-panel-title>\n               <span *ngIf=\"!!item?.value?.ID\">\n                  <span>{{ dialogRef ? 'Route' : 'Request ' + item.value.ID}}</span>: \n                  <span [class]=\"cssClass(item.value.Stage)\">{{item.value.Stage}}</span>\n               </span>\n               <span *ngIf=\"!item?.value?.ID\">New Request</span>\n               <!-- <ng-content select=\"title-text\" [class]=\"cssClass(item.value.Stage)\"></ng-content> -->\n            </mat-panel-title>\n\n            <mat-panel-description>\n               {{item?.value?.Author?.Title || user?.Title}}\n               <span *ngIf=\"item?.value?.Created\">submitted: {{item.value.Created | date:'yyyy-MM-dd'}}</span>\n               <!-- <ng-content select=\"desc-text\"></ng-content> -->\n            </mat-panel-description>\n         </mat-expansion-panel-header>\n\n         <lib-rx-form #request\n            [item]=\"item\"\n            [fieldStyle]=\"{floatLabel:'always', appearance:'outline'}\">\n         </lib-rx-form>         \n      </mat-expansion-panel>\n\n      <!--- Attachments --->\n      <mat-expansion-panel expanded=\"true\">\n         <mat-expansion-panel-header>\n            <mat-panel-title>Attachment</mat-panel-title>\n            <mat-panel-description>{{files?.attached?.length}} support documents...</mat-panel-description>\n         </mat-expansion-panel-header>\n\n         <div class=\"row center\">\n            <h4>Templates:</h4>\n            <a mat-button *ngFor=\"let file of templates$ | async\" \n               [href]=\"file.ServerRelativeUrl\" download>{{file.Name}}\n            </a>\n         </div>            \n\n         <lib-file-input class=\"attachment\"\n            [(uploading)]=\"files.attaching\" (uploadingChange)=\"attach($event)\"            \n            [uploaded]=\"files.attached\" (deleteEvent)=\"detach($event)\">\n         </lib-file-input>\n      </mat-expansion-panel>\n\n      <!--- Comments, Actions required/taken --->\n      <mat-expansion-panel *ngIf=\"item.value?.ActionRequired\" \n         [expanded]=\"item.value.Stage==enum.Stage.Start\">\n         <mat-expansion-panel-header\n         [class.accent-fg]=\"item.value.Stage==enum.Stage.Start\">\n            <mat-panel-title>Comments</mat-panel-title>\n            <mat-panel-description>Actions required/taken</mat-panel-description>\n         </mat-expansion-panel-header>\n\n         <!--- readonly --->\n         <pre class=\"accent\">{{item.value.ActionRequired}}</pre>\n            \n         <!-- route to -->\n         <mat-divider style=\"margin-bottom: 12px;\"></mat-divider>\n         <app-approval-route *ngIf=\"approvalRoutes?.length\"\n            [routes]=\"approvalRoutes\" [(selected)]=\"nextRoute\">\n         </app-approval-route>\n      </mat-expansion-panel>\n\n      <!--- Approval\n      <mat-expansion-panel>\n         <mat-expansion-panel-header>\n            <mat-panel-title [class]=\"cssClass(item?.value?.Stage)\">\n               Approval Process\n            </mat-panel-title>\n            <mat-panel-description [class]=\"cssClass(item?.value?.Stage)\">\n               {{item.value.Stage}}\n            </mat-panel-description>\n         </mat-expansion-panel-header>\n\n         <app-process #process\n            [(approvers)]=\"approvers\"\n            [currentStage]=\"item.value.Stage\"\n            [showDetail]=\"item.value.ID\">\n         </app-process>\n      </mat-expansion-panel>\n      --->\n\n      <mat-expansion-panel expanded=\"true\">\n         <mat-expansion-panel-header>\n            <mat-panel-title [class]=\"cssClass(item?.value?.Stage)\">\n               Approval Process\n            </mat-panel-title>\n            <mat-panel-description [class]=\"cssClass(item?.value?.Stage)\">\n               {{item.value.Stage}}\n            </mat-panel-description>\n         </mat-expansion-panel-header>\n\n         <app-approval-steps #process\n            [(approvers)]=\"approvers\"\n            [currentRoute]=\"item.value.Stage\"\n            [showDetail]=\"item.value.ID\">\n         </app-approval-steps>\n\n         <!-- route to -->\n         <mat-divider style=\"margin-bottom: 12px;\"></mat-divider>\n         <app-approval-route *ngIf=\"approvalRoutes?.length\"\n            [routes]=\"approvalRoutes\" [(selected)]=\"nextRoute\">\n         </app-approval-route>\n\n         <!-- test -->\n         <hr>\n         <button mat-button (click)=\"getMembers()\">Get Members</button>\n         <button mat-button (click)=\"email()\" color=\"unk\">Email</button>\n         <pre>{{members|json}}</pre>\n         <!--- test --->\n      </mat-expansion-panel>\n   </mat-accordion>\n</div>\n\n<!--- options on list items --->\n<div [ngClass]=\"dialogRef ? 'mat-dialog-actions' : 'mat-action-row'\">\n   <button *ngIf=\"Admin\" mat-raised-button color=\"accent\" (click)=\"view.item = !view.item\">view item</button>\n   <button *ngIf=\"dialogRef\" mat-button (click)=\"dialogRef.close()\">Close</button>\n   <span class=\"spacer\"></span>\n\n   <button *ngFor=\"let op of operations | keyvalue\"\n      mat-flat-button [color]=\"op.value.color\"\n      [disabled]=\"op.value.disabled\"\n      (click)=\"onSubmit(op.key)\">{{op.value.caption}}\n   </button>\n</div>\n\n<pre *ngIf=\"view.item\">{{item.value|json}}</pre>\n","import { Component, OnInit } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { routes } from './app-routing.module';\nimport { ContextService } from './context.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  user:any;\n  app:any = {};\n  page:any;\n  navs:any;\n\n  isHandset$:Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n  .pipe(map(result => result.matches), shareReplay());\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private ctx:ContextService\n  ) {}\n  \n\n  ngOnInit() {\n    this.user = this.ctx.user;\n    this.navs = routes;\n    this.ctx.current.busy$.subscribe(stt => {\n      setTimeout(() => this.app.busy = stt), 0\n    });\n\n    this.app.testing = this.ctx.testing;\n\n    window.onerror = (...args) => {\n      let err = '';\n      args.forEach(e => err += '\\n\\n' + e);\n      alert(err);\n    }\n  }\n\n  /// router-outlet:activate\n  onActivate(ev:any) {\n    // console.log('onActivate::component title/name:', ev);\n  }\n\n  /// report error\n  alert(err:string, cat?:string) {\n    this.ctx.alert(err, cat.toUpperCase(), cat);\n  }\n\n  throw(any:any) {\n    throw new Error(any);\n  }\n\n  userDetail() {\n    this.ctx.alert(\n      { Detail: this.user },\n      this.user.Title,\n      'info'\n    );\n  }\n}\n","<div class=\"page-header\">\n  <mat-progress-bar \n    [mode]=\"app.busy ? 'indeterminate' : 'determinate'\" \n    [color]=\"app.busy? 'warn': 'primary'\" value=\"100\" style=\"height:2px;\">\n  </mat-progress-bar>\n  \n  <div class=\"nav center\">\n    <button mat-icon-button aria-label=\"Toggle sidenav\" (click)=\"drawer.toggle()\">\n      <mat-icon aria-label=\"nav toggle\" style=\"margin-top:-8px\">&#9776;</mat-icon>\n    </button>\n    <a class=\"mat-button\" routerLink=\"\">🏡</a>\n\n    <ng-container *ngFor=\"let nav of navs\">\n      <a *ngIf=\"nav.name\" routerLink=\"/{{nav.path}}\"\n        routerLinkActive=\"active\">{{nav.name}}\n      </a>\n    </ng-container>\n    \n    <span class=\"spacer\"></span>\n    <button mat-button class=\"info-fg\" (click)=userDetail()>{{user.Title}}</button>\n  </div>\n</div>\n \n<mat-sidenav-container>\n  <mat-sidenav #drawer class=\"sidenav\" #sidenav mode=\"side\" opened\n    [fixedInViewport]=\"true\" [fixedTopGap]=\"64\" [fixedBottomGap]=\"0\">\n    <mat-nav-list>\n      <ng-container *ngFor=\"let nav of navs\">\n        <a mat-list-item *ngIf=\"nav.name\" routerLink=\"/{{nav.path}}\"\n          routerLinkActive=\"active\">{{nav.name}}\n        </a>        \n      </ng-container>\n      <mat-divider></mat-divider>\n      \n      <!--- test --->\n      <div *ngIf=\"app.testing\" style=\"padding:16px;\">\n        <mat-form-field>\n          <mat-label>Error</mat-label>\n          <textarea matInput value=\"{{app|json}}\" #txt></textarea>\n        </mat-form-field>\n        <br>\n        <button mat-raised-button color=\"primary\" (click)=\"alert(txt.value, 'success')\">Success</button>\n        <button mat-raised-button color=\"accent\" (click)=\"alert(txt.value, 'warn')\">Warn</button>\n        <button mat-raised-button color=\"warn\" (click)=\"alert(txt.value, 'error')\">Error</button>\n        <button mat-raised-button (click)=\"throw(txt)\">Error</button>\n      </div>\n      <!--- test end --->\n\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <div style=\"margin:8px;\">\n      <router-outlet (activate)=\"onActivate($event)\"></router-outlet>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"row\">\n   <div class=\"col-3\">\n      <mat-radio-group [disabled]=\"disabled\"\n         class=\"concur-radio-group\"\n         [(ngModel)]=\"approver.concurred\"\n         (change)=\"onConcur()\">\n         <mat-radio-button color=\"primary\" [value]=\"true\">Concurred</mat-radio-button>\n         <mat-radio-button color=\"warn\" [value]=\"false\">Non-concurred</mat-radio-button>\n      </mat-radio-group>\n      \n      <button *ngIf=\"!disabled\" mat-flat-button (click)=\"clearConcur()\">Clear</button>\n   </div>\n\n   <div class=\"col-6\">\n      <mat-form-field appearance=\"outline\" floatLabel=\"always\">\n         <mat-label>Comment</mat-label>\n         <textarea matInput [disabled]=\"disabled\" [(ngModel)]=\"approver.comment\"></textarea>\n      </mat-form-field>\n   </div>\n\n   <div class=\"col-3\">\n      <div class=\"col-content\">\n         <label>Signed/Dated by</label>\n         <div class=\"sign-date\">{{approver.name}}<br>{{approver.date | date: 'yyyy-MM-dd @ HH:mm'}}\n         </div>\n      </div>\n   </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ContextService } from '../../context.service';\n\n@Component({\n  selector: 'app-approval-action',\n  templateUrl: './approval-action.component.html'\n})\nexport class ApprovalActionComponent implements OnInit {\n  @Input() disabled:boolean;\n  @Input() approver:any;\n  @Input() approvers:any[];\n  // @Output() onAction = new EventEmitter();\n\n  constructor(private ctx:ContextService) { }\n\n  ngOnInit(): void {\n  }\n\n  nextRoute(approvers = this.approvers) {\n    let next = approvers.find((approver: any) => !approver.concurred);\n    return (next) ? next.title : this.ctx.ENUM.Stage.End;\n  }\n\n  onConcur() {\n    this.approver.name = this.ctx.user.Title;\n    this.approver.date = new Date();\n    this.approver.routing = this.approver.concurred\n      ? this.nextRoute()\n      : this.ctx.ENUM.Stage.End;\n\n    // this.onAction.emit(this.approver.concurred);\n\n  }\n  \n  // onRoute() {\n  //   this.approver.name = this.ctx.user.Title;\n  //   this.approver.date = new Date();\n  // }\n\n  clearConcur() {\n    this.approver.name = undefined;\n    this.approver.date = undefined;\n    this.approver.concurred = undefined;\n    this.approver.comment = '';\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Component, ElementRef, ViewChild, OnChanges, OnInit, Input } from '@angular/core';\nimport { TAB, COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { FormControl } from '@angular/forms';\nimport { MatAutocompleteSelectedEvent, MatAutocomplete } from '@angular/material/autocomplete';\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { Observable } from 'rxjs';\nimport { mergeMap, startWith } from 'rxjs/operators';\nimport { ContextService } from '../../context.service';\nimport { of } from 'rxjs';\n\n@Component({\n  selector: 'app-members',\n  templateUrl: './members.component.html'\n})\nexport class MembersComponent implements OnChanges, OnInit {\n  separatorKeysCodes: number[] = [TAB, ENTER, COMMA];\n  searchText = new FormControl();\n  searchResults$: Observable<any[]>;\n\n  @Input() groupId:number;\n  @Input() field:any;\n  @Input() items:any[];\n  @Input() done:boolean;\n\n  private users:any = {};\n\n  @ViewChild('itemInput') itemInput: ElementRef<HTMLInputElement>;\n  @ViewChild('auto') matAutocomplete: MatAutocomplete;\n\n  constructor(private ctx:ContextService) {}\n\n  private getGroupUsers(value?:string, groupId=this.groupId, key='Title', ):Observable<any> {\n    if (isNaN(groupId)) {\n      this.ctx.current.error$.next({\n        title: `Invalid User Group ID: ${this.groupId}.`,\n        detail: 'Unable to find users in the group.'\n      });\n      return of();\n    }\n    \n    return new Observable(subscriber => {\n      if (this.users[groupId]?.length) {\n        let results = (value?.length) \n          ? this.users[groupId].filter((user:any) => \n              user[key].toLowerCase().indexOf(value.toLowerCase()) > -1)\n          : this.users[groupId];\n        \n        subscriber.next(results);\n      }\n      else {\n        this.ctx.getGroupUsers(this.groupId)\n        .subscribe(res => {\n          this.users[groupId] = res;\n          subscriber.next(this.users[groupId]);\n        });\n      }\n    });\n  };\n\n  ngOnInit() {}\n\n  ngOnChanges() {\n    // if (this.itemInput) {\n    //   this.itemInput.nativeElement.focus();\n    // }\n    \n    if (!isNaN(this.groupId) && this.groupId > -1) {\n      this.searchResults$ = this.searchText.valueChanges.pipe(\n        startWith(''),\n        mergeMap(value => {\n          // return this.sp.queryUsers(this.groupId, this.field.key, value);\n          return this.getGroupUsers(value);\n        })\n      );\n    }\n\n    if (this.done) {\n      this.users[this.groupId] = undefined;\n    }\n  }\n\n  add(event: MatChipInputEvent): void {\n    const input = event.input;\n    const value = event.value;\n\n    // Add item\n    if ((value || '').trim()) {\n      this.items.push(value.trim());\n    }\n\n    // Reset the input value\n    if (input) input.value = '';\n\n    this.searchText.setValue(null);\n  }\n\n  remove(item:string): void {\n    const index = this.items.indexOf(item);\n    if (index > -1) this.items.splice(index, 1);\n  }\n\n  selected(event: MatAutocompleteSelectedEvent): void {\n    this.items.push({\n      Email: event.option.value.Email || event.option.value.LoginName || event.option.value.Name,\n      Title: event.option.value.Title\n    });\n    \n    this.itemInput.nativeElement.value = '';\n    this.searchText.setValue(null);\n  }\n}\n","\n<ng-container [ngSwitch]=\"field.editing\">\n   <div *ngSwitchCase=\"false\">\n      <mat-chip-list>\n         <mat-chip *ngFor=\"let item of items\" style=\"margin-left:8px;\">\n            {{item.Title}}\n         </mat-chip>\n      </mat-chip-list>\n   </div>\n\n   <form *ngSwitchDefault color=\"warn\">\n      <mat-form-field\n         [appearance]=\"field.appearance\" \n         [floatLabel]=\"field.floatLabel\"\n         [class]=\"field.class\">\n         <mat-label>{{field.label}}</mat-label>\n         <mat-chip-list #chipList aria-label=\"Selection\">\n            <mat-chip *ngFor=\"let item of items\" (removed)=\"remove(item)\">\n               {{item.Title}}<span class=\"danger\" matChipRemove>✗</span>\n            </mat-chip>\n\n            <input #itemInput\n               [placeholder]=\"field.placeholder\"\n               [formControl]=\"searchText\"\n               [matAutocomplete]=\"auto\"\n               [matChipInputFor]=\"chipList\"\n               [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n               (matChipInputTokenEnd)=\"add($event)\">\n         </mat-chip-list>\n\n         <mat-autocomplete #auto=\"matAutocomplete\"\n            (optionSelected)=\"selected($event)\">\n            <mat-option *ngFor=\"let item of searchResults$ | async\" [value]=\"item\">\n               {{item[field.key] || item.Title}}\n            </mat-option>\n         </mat-autocomplete>\n      </mat-form-field>\n   </form>\n</ng-container>\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}